{
  "apiVersion": "apps/v1",
  "kind": "StatefulSet",
  "metadata": {
    "annotations": {
      "allResourceAnnotation": "allResourceValue"
    },
    "labels": {
      "app": "StackGresCluster",
      "cluster-name": "test",
      "cluster-uid": "df08342c-9480-43d7-89d4-22d182a6ba08"
    },
    "name": "test",
    "namespace": "annotations",
    "ownerReferences": [
      {
        "apiVersion": "stackgres.io/v1",
        "controller": true,
        "kind": "SGCluster",
        "name": "test",
        "uid": "df08342c-9480-43d7-89d4-22d182a6ba08"
      }
    ]
  },
  "spec": {
    "podManagementPolicy": "OrderedReady",
    "replicas": 2,
    "selector": {
      "matchLabels": {
        "app": "StackGresCluster",
        "cluster": "true",
        "cluster-name": "test",
        "cluster-uid": "df08342c-9480-43d7-89d4-22d182a6ba08",
        "disruptible": "true"
      }
    },
    "serviceName": "test",
    "template": {
      "metadata": {
        "annotations": {
          "allResourceAnnotation": "allResourceValue",
          "podsAnnotation": "podsAnnotationValue",
          "stackgres.io/cluster-controller-version": "main-jvm",
          "stackgres.io/envoy-version": "1.19.1",
          "stackgres.io/operatorVersion": "1.1.0-SNAPSHOT",
          "stackgres.io/patroni-version": "2.1.1",
          "stackgres.io/pgbouncer-version": "1.15.0",
          "stackgres.io/postgresql-version": "12.2",
          "stackgres.io/prometheus-postgres-exporter-version": "0.10.0"
        },
        "labels": {
          "app": "StackGresCluster",
          "cluster": "true",
          "cluster-name": "test",
          "cluster-uid": "df08342c-9480-43d7-89d4-22d182a6ba08",
          "disruptible": "true"
        }
      },
      "spec": {
        "affinity": {
          "nodeAffinity": {},
          "podAntiAffinity": {
            "requiredDuringSchedulingIgnoredDuringExecution": [
              {
                "labelSelector": {
                  "matchExpressions": [
                    {
                      "key": "app",
                      "operator": "In",
                      "values": [
                        "StackGresCluster"
                      ]
                    },
                    {
                      "key": "cluster",
                      "operator": "In",
                      "values": [
                        "true"
                      ]
                    }
                  ]
                },
                "topologyKey": "kubernetes.io/hostname"
              }
            ]
          }
        },
        "containers": [
          {
            "command": [
              "/bin/sh",
              "-ex",
              "/usr/local/bin/start-patroni.sh"
            ],
            "env": [
              {
                "name": "LOCAL_BIN_PATH",
                "value": "/usr/local/bin"
              },
              {
                "name": "PG_BASE_PATH",
                "value": "/var/lib/postgresql"
              },
              {
                "name": "PG_DATA_PATH",
                "value": "/var/lib/postgresql/data"
              },
              {
                "name": "ETC_PASSWD_PATH",
                "value": "/etc/passwd"
              },
              {
                "name": "ETC_GROUP_PATH",
                "value": "/etc/group"
              },
              {
                "name": "ETC_SHADOW_PATH",
                "value": "/etc/shadow"
              },
              {
                "name": "ETC_GSHADOW_PATH",
                "value": "/etc/gshadow"
              },
              {
                "name": "PG_EXTENSIONS_BASE_PATH",
                "value": "/var/lib/postgresql/extensions"
              },
              {
                "name": "PG_EXTENSIONS_PATH",
                "value": "/var/lib/postgresql/extensions/12/6"
              },
              {
                "name": "PG_EXTENSIONS_BINARIES_PATH",
                "value": "/var/lib/postgresql/extensions/12/6/usr/lib/postgresql/12"
              },
              {
                "name": "PG_EXTENSIONS_BIN_PATH",
                "value": "/var/lib/postgresql/extensions/12/6/usr/lib/postgresql/12/bin"
              },
              {
                "name": "PG_EXTENSIONS_LIB_PATH",
                "value": "/var/lib/postgresql/extensions/12/6/usr/lib/postgresql/12/lib"
              },
              {
                "name": "PG_EXTENSIONS_SHARE_PATH",
                "value": "/var/lib/postgresql/extensions/12/6/usr/share/postgresql/12"
              },
              {
                "name": "PG_EXTENSIONS_EXTENSION_PATH",
                "value": "/var/lib/postgresql/extensions/12/6/usr/share/postgresql/12/extension"
              },
              {
                "name": "PG_EXTENSIONS_LIB64_PATH",
                "value": "/var/lib/postgresql/extensions/12/6/usr/lib64"
              },
              {
                "name": "PG_LIB64_PATH",
                "value": "/usr/lib64"
              },
              {
                "name": "PG_BINARIES_PATH",
                "value": "/usr/lib/postgresql/12.2"
              },
              {
                "name": "PG_BIN_PATH",
                "value": "/usr/lib/postgresql/12.2/bin"
              },
              {
                "name": "PG_LIB_PATH",
                "value": "/usr/lib/postgresql/12.2/lib"
              },
              {
                "name": "PG_EXTRA_BIN_PATH",
                "value": "/usr/lib/postgresql/12.2/extra/bin"
              },
              {
                "name": "PG_EXTRA_LIB_PATH",
                "value": "/usr/lib/postgresql/12.2/extra/lib"
              },
              {
                "name": "PG_SHARE_PATH",
                "value": "/usr/share/postgresql/12.2"
              },
              {
                "name": "PG_EXTENSION_PATH",
                "value": "/usr/share/postgresql/12.2/extension"
              },
              {
                "name": "PG_RELOCATED_PATH",
                "value": "/var/lib/postgresql/relocated/12.2"
              },
              {
                "name": "PG_RELOCATED_LIB64_PATH",
                "value": "/var/lib/postgresql/relocated/12.2/usr/lib64"
              },
              {
                "name": "PG_RELOCATED_BINARIES_PATH",
                "value": "/var/lib/postgresql/relocated/12.2/usr/lib/postgresql/12.2"
              },
              {
                "name": "PG_RELOCATED_BIN_PATH",
                "value": "/var/lib/postgresql/relocated/12.2/usr/lib/postgresql/12.2/bin"
              },
              {
                "name": "PG_RELOCATED_LIB_PATH",
                "value": "/var/lib/postgresql/relocated/12.2/usr/lib/postgresql/12.2/lib"
              },
              {
                "name": "PG_RELOCATED_SHARE_PATH",
                "value": "/var/lib/postgresql/relocated/12.2/usr/share/postgresql/12.2"
              },
              {
                "name": "PG_RELOCATED_EXTENSION_PATH",
                "value": "/var/lib/postgresql/relocated/12.2/usr/share/postgresql/12.2/extension"
              },
              {
                "name": "PG_UPGRADE_PATH",
                "value": "/var/lib/postgresql/upgrade"
              },
              {
                "name": "PATH",
                "value": "/usr/lib/postgresql/12.2/extra/bin:/usr/lib/postgresql/12.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
              },
              {
                "name": "LD_LIBRARY_PATH",
                "value": "/usr/lib/postgresql/12.2/extra/lib"
              },
              {
                "name": "PATRONI_RESTAPI_LISTEN",
                "value": "0.0.0.0:8009"
              },
              {
                "name": "PATRONI_RESTAPI_CONNECT_ADDRESS",
                "value": "${PATRONI_KUBERNETES_POD_IP}:8008"
              },
              {
                "name": "PATRONI_RESTAPI_USERNAME",
                "value": "superuser"
              },
              {
                "name": "PATRONI_RESTAPI_PASSWORD",
                "valueFrom": {
                  "secretKeyRef": {
                    "key": "restapi-password",
                    "name": "test"
                  }
                }
              },
              {
                "name": "PATRONI_NAME",
                "valueFrom": {
                  "fieldRef": {
                    "fieldPath": "metadata.name"
                  }
                }
              },
              {
                "name": "PATRONI_KUBERNETES_NAMESPACE",
                "valueFrom": {
                  "fieldRef": {
                    "fieldPath": "metadata.namespace"
                  }
                }
              },
              {
                "name": "PATRONI_KUBERNETES_POD_IP",
                "valueFrom": {
                  "fieldRef": {
                    "fieldPath": "status.podIP"
                  }
                }
              },
              {
                "name": "PATRONI_SUPERUSER_PASSWORD",
                "valueFrom": {
                  "secretKeyRef": {
                    "key": "superuser-password",
                    "name": "test"
                  }
                }
              },
              {
                "name": "PATRONI_REPLICATION_PASSWORD",
                "valueFrom": {
                  "secretKeyRef": {
                    "key": "replication-password",
                    "name": "test"
                  }
                }
              },
              {
                "name": "PATRONI_authenticator_PASSWORD",
                "valueFrom": {
                  "secretKeyRef": {
                    "key": "authenticator-password",
                    "name": "test"
                  }
                }
              },
              {
                "name": "PATRONI_authenticator_OPTIONS",
                "value": "superuser"
              },
              {
                "name": "PATRONI_CONFIG_PATH",
                "value": "/etc/patroni"
              },
              {
                "name": "PATRONI_ENV_PATH",
                "value": "/etc/env/patroni"
              },
              {
                "name": "BACKUP_ENV",
                "value": "backup"
              },
              {
                "name": "BASE_SECRET_PATH",
                "value": "/etc/env/.secret"
              },
              {
                "name": "BACKUP_ENV_PATH",
                "value": "/etc/env/backup"
              },
              {
                "name": "BACKUP_SECRET_PATH",
                "value": "/etc/env/.secret/backup"
              },
              {
                "name": "RESTORE_ENV",
                "value": "restore"
              },
              {
                "name": "RESTORE_ENV_PATH",
                "value": "/etc/env/restore"
              },
              {
                "name": "RESTORE_SECRET_PATH",
                "value": "/etc/env/.secret/restore"
              }
            ],
            "envFrom": [
              {
                "configMapRef": {
                  "name": "test"
                }
              }
            ],
            "image": "quay.io/ongres/patroni:v2.1.0-pg12.2-build-6.5",
            "imagePullPolicy": "IfNotPresent",
            "livenessProbe": {
              "failureThreshold": 6,
              "httpGet": {
                "path": "/cluster",
                "port": 8008,
                "scheme": "HTTP"
              },
              "initialDelaySeconds": 15,
              "periodSeconds": 20
            },
            "name": "patroni",
            "ports": [
              {
                "containerPort": 7432,
                "name": "pgport",
                "protocol": "TCP"
              },
              {
                "containerPort": 7433,
                "name": "pgreplication",
                "protocol": "TCP"
              },
              {
                "containerPort": 8008,
                "name": "patroniport",
                "protocol": "TCP"
              }
            ],
            "readinessProbe": {
              "httpGet": {
                "path": "/read-only",
                "port": 8008,
                "scheme": "HTTP"
              },
              "initialDelaySeconds": 5,
              "periodSeconds": 10
            },
            "resources": {
              "limits": {
                "cpu": "500m",
                "memory": "128Mi"
              },
              "requests": {
                "cpu": "500m",
                "memory": "128Mi"
              }
            },
            "volumeMounts": [
              {
                "mountPath": "/var/run/postgresql",
                "name": "socket"
              },
              {
                "mountPath": "/dev/shm",
                "name": "dshm"
              },
              {
                "mountPath": "/var/log/postgresql",
                "name": "log"
              },
              {
                "mountPath": "/usr/local/bin",
                "name": "local-bin"
              },
              {
                "mountPath": "/etc/env/patroni",
                "name": "patroni-env"
              },
              {
                "mountPath": "/etc/patroni",
                "name": "patroni-config"
              },
              {
                "mountPath": "/etc/env/backup",
                "name": "backup-env"
              },
              {
                "mountPath": "/etc/env/.secret/backup",
                "name": "backup-secret"
              },
              {
                "mountPath": "/var/lib/postgresql",
                "name": "test-data"
              },
              {
                "mountPath": "/etc/passwd",
                "name": "user",
                "readOnly": true,
                "subPath": "etc/passwd"
              },
              {
                "mountPath": "/etc/group",
                "name": "user",
                "readOnly": true,
                "subPath": "etc/group"
              },
              {
                "mountPath": "/etc/shadow",
                "name": "user",
                "readOnly": true,
                "subPath": "etc/shadow"
              },
              {
                "mountPath": "/etc/gshadow",
                "name": "user",
                "readOnly": true,
                "subPath": "etc/gshadow"
              },
              {
                "mountPath": "/usr/lib64",
                "name": "test-data",
                "subPath": "relocated/12.2/usr/lib64"
              },
              {
                "mountPath": "/usr/lib/postgresql/12.2/bin",
                "name": "test-data",
                "subPath": "relocated/12.2/usr/lib/postgresql/12.2/bin"
              },
              {
                "mountPath": "/usr/lib/postgresql/12.2/lib",
                "name": "test-data",
                "subPath": "relocated/12.2/usr/lib/postgresql/12.2/lib"
              },
              {
                "mountPath": "/usr/share/postgresql/12.2",
                "name": "test-data",
                "subPath": "relocated/12.2/usr/share/postgresql/12.2"
              },
              {
                "mountPath": "/usr/share/postgresql/12.2/extension",
                "name": "test-data",
                "subPath": "extensions/12/6/usr/share/postgresql/12/extension"
              },
              {
                "mountPath": "/usr/lib/postgresql/12.2/extra/bin",
                "name": "test-data",
                "subPath": "extensions/12/6/usr/lib/postgresql/12/bin"
              },
              {
                "mountPath": "/usr/lib/postgresql/12.2/extra/lib",
                "name": "test-data",
                "subPath": "extensions/12/6/usr/lib64"
              },
              {
                "mountPath": "/etc/patroni/init-script.d/00000-prometheus-postgres-exporter-init.postgres.sql",
                "name": "test-internal-00000-prometheus-postgres-exporter-init-postgres",
                "readOnly": true,
                "subPath": "00000-prometheus-postgres-exporter-init.postgres.sql"
              }
            ]
          },
          {
            "args": [
              "-c",
              "/etc/envoy/envoy.json"
            ],
            "command": [
              "/usr/local/bin/envoy"
            ],
            "image": "quay.io/ongres/envoy:v1.19.1-build-6.6",
            "imagePullPolicy": "IfNotPresent",
            "name": "envoy",
            "ports": [
              {
                "containerPort": 7432,
                "protocol": "TCP"
              },
              {
                "containerPort": 7433,
                "protocol": "TCP"
              }
            ],
            "volumeMounts": [
              {
                "mountPath": "/etc/envoy",
                "name": "envoy",
                "readOnly": true
              },
              {
                "mountPath": "/etc/passwd",
                "name": "user",
                "readOnly": true,
                "subPath": "etc/passwd"
              },
              {
                "mountPath": "/etc/group",
                "name": "user",
                "readOnly": true,
                "subPath": "etc/group"
              },
              {
                "mountPath": "/etc/shadow",
                "name": "user",
                "readOnly": true,
                "subPath": "etc/shadow"
              },
              {
                "mountPath": "/etc/gshadow",
                "name": "user",
                "readOnly": true,
                "subPath": "etc/gshadow"
              }
            ]
          },
          {
            "args": [
              "run_postgres_exporter() {\n  set -x\n  exec /usr/local/bin/postgres_exporter \\\n    --log.level=info\n}\n\nset +x\nwhile true\ndo\n  if ( [ -z \"$PID\" ] || [ ! -d \"/proc/$PID\" ] ) \\\n    \u0026\u0026 [ -S '/var/run/postgresql/.s.PGSQL.5432' ]\n  then\n    if [ -n \"$PID\" ]\n    then\n      kill \"$PID\"\n      wait \"$PID\" || true\n    fi\n    run_postgres_exporter \u0026\n    PID=\"$!\"\n  fi\n  sleep 5\ndone\n"
            ],
            "command": [
              "/bin/sh",
              "-exc"
            ],
            "env": [
              {
                "name": "PGAPPNAME",
                "value": "prometheus-postgres-exporter"
              },
              {
                "name": "DATA_SOURCE_NAME",
                "value": "postgresql://postgres@:5432/postgres?host=/var/run/postgresql\u0026sslmode=disable"
              },
              {
                "name": "PG_EXPORTER_EXTEND_QUERY_PATH",
                "value": "/var/opt/postgres-exporter/queries.yaml"
              },
              {
                "name": "PG_EXPORTER_CONSTANT_LABELS",
                "value": "cluster_name=test, namespace=annotations"
              }
            ],
            "image": "quay.io/ongres/prometheus-postgres-exporter:v0.10.0-build-6.6",
            "imagePullPolicy": "IfNotPresent",
            "name": "prometheus-postgres-exporter",
            "ports": [
              {
                "containerPort": 9187,
                "protocol": "TCP"
              }
            ],
            "volumeMounts": [
              {
                "mountPath": "/var/run/postgresql",
                "name": "socket"
              },
              {
                "mountPath": "/var/opt/postgres-exporter/queries.yaml",
                "name": "queries",
                "readOnly": true,
                "subPath": "queries.yaml"
              },
              {
                "mountPath": "/etc/passwd",
                "name": "user",
                "readOnly": true,
                "subPath": "etc/passwd"
              },
              {
                "mountPath": "/etc/group",
                "name": "user",
                "readOnly": true,
                "subPath": "etc/group"
              },
              {
                "mountPath": "/etc/shadow",
                "name": "user",
                "readOnly": true,
                "subPath": "etc/shadow"
              },
              {
                "mountPath": "/etc/gshadow",
                "name": "user",
                "readOnly": true,
                "subPath": "etc/gshadow"
              }
            ]
          },
          {
            "env": [
              {
                "name": "CLUSTER_NAME",
                "value": "test"
              },
              {
                "name": "CLUSTER_NAMESPACE",
                "value": "annotations"
              },
              {
                "name": "CLUSTER_CONTROLLER_POD_NAME",
                "valueFrom": {
                  "fieldRef": {
                    "apiVersion": "v1",
                    "fieldPath": "metadata.name"
                  }
                }
              },
              {
                "name": "CLUSTER_CONTROLLER_EXTENSIONS_REPOSITORY_URLS",
                "value": "https://extensions.stackgres.io/postgres/repository"
              },
              {
                "name": "CLUSTER_CONTROLLER_SKIP_OVERWRITE_SHARED_LIBRARIES",
                "value": "true"
              },
              {
                "name": "CLUSTER_CONTROLLER_RECONCILE_PGBOUNCER",
                "value": "true"
              },
              {
                "name": "CLUSTER_CONTROLLER_LOG_LEVEL"
              },
              {
                "name": "CLUSTER_CONTROLLER_SHOW_STACK_TRACES"
              },
              {
                "name": "APP_OPTS"
              },
              {
                "name": "JAVA_OPTS"
              },
              {
                "name": "DEBUG_CLUSTER_CONTROLLER"
              },
              {
                "name": "DEBUG_CLUSTER_CONTROLLER_SUSPEND"
              }
            ],
            "image": "quay.io/stackgres/cluster-controller:main-jvm",
            "imagePullPolicy": "IfNotPresent",
            "name": "cluster-controller",
            "volumeMounts": [
              {
                "mountPath": "/etc/passwd",
                "name": "user",
                "readOnly": true,
                "subPath": "etc/passwd"
              },
              {
                "mountPath": "/etc/group",
                "name": "user",
                "readOnly": true,
                "subPath": "etc/group"
              },
              {
                "mountPath": "/etc/shadow",
                "name": "user",
                "readOnly": true,
                "subPath": "etc/shadow"
              },
              {
                "mountPath": "/etc/gshadow",
                "name": "user",
                "readOnly": true,
                "subPath": "etc/gshadow"
              },
              {
                "mountPath": "/var/lib/postgresql",
                "name": "test-data"
              },
              {
                "mountPath": "/etc/pgbouncer/auth",
                "name": "pgbouncer-auth-file",
                "subPath": "etc/pgbouncer/auth"
              }
            ]
          },
          {
            "image": "quay.io/ongres/pgbouncer:v1.15.0-build-6.6",
            "imagePullPolicy": "IfNotPresent",
            "name": "pgbouncer",
            "volumeMounts": [
              {
                "mountPath": "/var/run/postgresql",
                "name": "socket"
              },
              {
                "mountPath": "/etc/pgbouncer/pgbouncer.ini",
                "name": "pgbouncer",
                "readOnly": true,
                "subPath": "pgbouncer.ini"
              },
              {
                "mountPath": "/etc/pgbouncer/auth",
                "name": "pgbouncer-auth-file",
                "readOnly": true,
                "subPath": "etc/pgbouncer/auth"
              },
              {
                "mountPath": "/etc/passwd",
                "name": "user",
                "readOnly": true,
                "subPath": "etc/passwd"
              },
              {
                "mountPath": "/etc/group",
                "name": "user",
                "readOnly": true,
                "subPath": "etc/group"
              },
              {
                "mountPath": "/etc/shadow",
                "name": "user",
                "readOnly": true,
                "subPath": "etc/shadow"
              },
              {
                "mountPath": "/etc/gshadow",
                "name": "user",
                "readOnly": true,
                "subPath": "etc/gshadow"
              }
            ]
          },
          {
            "args": [
              "-c",
              "while true; do sleep 10; done"
            ],
            "command": [
              "/bin/sh"
            ],
            "image": "quay.io/ongres/postgres-util:v12.2-build-6.5",
            "imagePullPolicy": "IfNotPresent",
            "name": "postgres-util",
            "stdin": true,
            "tty": true,
            "volumeMounts": [
              {
                "mountPath": "/var/run/postgresql",
                "name": "socket"
              },
              {
                "mountPath": "/var/lib/postgresql",
                "name": "empty-base"
              },
              {
                "mountPath": "/etc/passwd",
                "name": "user",
                "readOnly": true,
                "subPath": "etc/passwd"
              },
              {
                "mountPath": "/etc/group",
                "name": "user",
                "readOnly": true,
                "subPath": "etc/group"
              },
              {
                "mountPath": "/etc/shadow",
                "name": "user",
                "readOnly": true,
                "subPath": "etc/shadow"
              },
              {
                "mountPath": "/etc/gshadow",
                "name": "user",
                "readOnly": true,
                "subPath": "etc/gshadow"
              }
            ]
          }
        ],
        "initContainers": [
          {
            "command": [
              "/bin/sh",
              "-ex",
              "/templates/setup-arbitrary-user.sh"
            ],
            "env": [
              {
                "name": "TEMPLATES_PATH",
                "value": "/templates"
              },
              {
                "name": "PG_BASE_PATH",
                "value": "/var/lib/postgresql"
              },
              {
                "name": "PG_DATA_PATH",
                "value": "/var/lib/postgresql/data"
              }
            ],
            "image": "quay.io/ongres/kubectl:v1.19.14-build-6.6",
            "imagePullPolicy": "IfNotPresent",
            "name": "setup-arbitrary-user",
            "volumeMounts": [
              {
                "mountPath": "/templates",
                "name": "templates"
              },
              {
                "mountPath": "/local/etc",
                "name": "user",
                "subPath": "etc"
              }
            ]
          },
          {
            "command": [
              "/bin/sh",
              "-ex",
              "/templates/relocate-binaries.sh"
            ],
            "env": [
              {
                "name": "PG_BASE_PATH",
                "value": "/var/lib/postgresql"
              },
              {
                "name": "PG_DATA_PATH",
                "value": "/var/lib/postgresql/data"
              },
              {
                "name": "ETC_PASSWD_PATH",
                "value": "/etc/passwd"
              },
              {
                "name": "ETC_GROUP_PATH",
                "value": "/etc/group"
              },
              {
                "name": "ETC_SHADOW_PATH",
                "value": "/etc/shadow"
              },
              {
                "name": "ETC_GSHADOW_PATH",
                "value": "/etc/gshadow"
              },
              {
                "name": "PG_EXTENSIONS_BASE_PATH",
                "value": "/var/lib/postgresql/extensions"
              },
              {
                "name": "PG_EXTENSIONS_PATH",
                "value": "/var/lib/postgresql/extensions/12/6"
              },
              {
                "name": "PG_EXTENSIONS_BINARIES_PATH",
                "value": "/var/lib/postgresql/extensions/12/6/usr/lib/postgresql/12"
              },
              {
                "name": "PG_EXTENSIONS_BIN_PATH",
                "value": "/var/lib/postgresql/extensions/12/6/usr/lib/postgresql/12/bin"
              },
              {
                "name": "PG_EXTENSIONS_LIB_PATH",
                "value": "/var/lib/postgresql/extensions/12/6/usr/lib/postgresql/12/lib"
              },
              {
                "name": "PG_EXTENSIONS_SHARE_PATH",
                "value": "/var/lib/postgresql/extensions/12/6/usr/share/postgresql/12"
              },
              {
                "name": "PG_EXTENSIONS_EXTENSION_PATH",
                "value": "/var/lib/postgresql/extensions/12/6/usr/share/postgresql/12/extension"
              },
              {
                "name": "PG_EXTENSIONS_LIB64_PATH",
                "value": "/var/lib/postgresql/extensions/12/6/usr/lib64"
              },
              {
                "name": "PG_LIB64_PATH",
                "value": "/usr/lib64"
              },
              {
                "name": "PG_BINARIES_PATH",
                "value": "/usr/lib/postgresql/12.2"
              },
              {
                "name": "PG_BIN_PATH",
                "value": "/usr/lib/postgresql/12.2/bin"
              },
              {
                "name": "PG_LIB_PATH",
                "value": "/usr/lib/postgresql/12.2/lib"
              },
              {
                "name": "PG_EXTRA_BIN_PATH",
                "value": "/usr/lib/postgresql/12.2/extra/bin"
              },
              {
                "name": "PG_EXTRA_LIB_PATH",
                "value": "/usr/lib/postgresql/12.2/extra/lib"
              },
              {
                "name": "PG_SHARE_PATH",
                "value": "/usr/share/postgresql/12.2"
              },
              {
                "name": "PG_EXTENSION_PATH",
                "value": "/usr/share/postgresql/12.2/extension"
              },
              {
                "name": "PG_RELOCATED_PATH",
                "value": "/var/lib/postgresql/relocated/12.2"
              },
              {
                "name": "PG_RELOCATED_LIB64_PATH",
                "value": "/var/lib/postgresql/relocated/12.2/usr/lib64"
              },
              {
                "name": "PG_RELOCATED_BINARIES_PATH",
                "value": "/var/lib/postgresql/relocated/12.2/usr/lib/postgresql/12.2"
              },
              {
                "name": "PG_RELOCATED_BIN_PATH",
                "value": "/var/lib/postgresql/relocated/12.2/usr/lib/postgresql/12.2/bin"
              },
              {
                "name": "PG_RELOCATED_LIB_PATH",
                "value": "/var/lib/postgresql/relocated/12.2/usr/lib/postgresql/12.2/lib"
              },
              {
                "name": "PG_RELOCATED_SHARE_PATH",
                "value": "/var/lib/postgresql/relocated/12.2/usr/share/postgresql/12.2"
              },
              {
                "name": "PG_RELOCATED_EXTENSION_PATH",
                "value": "/var/lib/postgresql/relocated/12.2/usr/share/postgresql/12.2/extension"
              },
              {
                "name": "PG_UPGRADE_PATH",
                "value": "/var/lib/postgresql/upgrade"
              },
              {
                "name": "PATH",
                "value": "/usr/lib/postgresql/12.2/extra/bin:/usr/lib/postgresql/12.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
              },
              {
                "name": "LD_LIBRARY_PATH",
                "value": "/usr/lib/postgresql/12.2/extra/lib"
              }
            ],
            "image": "quay.io/ongres/patroni:v2.1.0-pg12.2-build-6.5",
            "imagePullPolicy": "IfNotPresent",
            "name": "relocate-binaries",
            "volumeMounts": [
              {
                "mountPath": "/templates",
                "name": "templates"
              },
              {
                "mountPath": "/var/lib/postgresql",
                "name": "test-data"
              }
            ]
          },
          {
            "command": [
              "/bin/sh",
              "-ex",
              "/templates/setup-scripts.sh"
            ],
            "env": [
              {
                "name": "LOCAL_BIN_PATH",
                "value": "/usr/local/bin"
              },
              {
                "name": "TEMPLATES_PATH",
                "value": "/templates"
              },
              {
                "name": "BASE_ENV_PATH",
                "value": "/etc/env"
              },
              {
                "name": "POSTGRES_PORT",
                "value": "5432"
              },
              {
                "name": "BASE_SECRET_PATH",
                "value": "/etc/env/.secret"
              }
            ],
            "image": "quay.io/ongres/kubectl:v1.19.14-build-6.6",
            "imagePullPolicy": "IfNotPresent",
            "name": "setup-scripts",
            "volumeMounts": [
              {
                "mountPath": "/templates",
                "name": "templates"
              },
              {
                "mountPath": "/usr/local/bin",
                "name": "local-bin"
              },
              {
                "mountPath": "/etc/passwd",
                "name": "user",
                "readOnly": true,
                "subPath": "etc/passwd"
              },
              {
                "mountPath": "/etc/group",
                "name": "user",
                "readOnly": true,
                "subPath": "etc/group"
              },
              {
                "mountPath": "/etc/shadow",
                "name": "user",
                "readOnly": true,
                "subPath": "etc/shadow"
              },
              {
                "mountPath": "/etc/gshadow",
                "name": "user",
                "readOnly": true,
                "subPath": "etc/gshadow"
              }
            ]
          },
          {
            "command": [
              "/bin/sh",
              "-exc",
              "test -f \"/etc/pgbouncer/auth/pgbouncer-admin-password\"\ntest -f \"/etc/pgbouncer/auth/pgbouncer-stats-password\"\nPGBOUNCER_ADMIN_MD5=\"$({\n  cat \"/etc/pgbouncer/auth/pgbouncer-admin-password\"\n  printf 'pgbouncer_admin'\n  } | md5sum | cut -d ' ' -f 1)\"\nPGBOUNCER_STATS_MD5=\"$({\n  cat \"/etc/pgbouncer/auth/pgbouncer-stats-password\"\n  printf 'pgbouncer_stats'\n  } | md5sum | cut -d ' ' -f 1)\"\n(\necho \"\\\"pgbouncer_admin\\\" \\\"md5$PGBOUNCER_ADMIN_MD5\\\"\"\necho \"\\\"pgbouncer_stats\\\" \\\"md5$PGBOUNCER_STATS_MD5\\\"\"\n) \u003e \"/etc/pgbouncer/auth/users.txt\""
            ],
            "image": "quay.io/ongres/kubectl:v1.19.14-build-6.6",
            "imagePullPolicy": "IfNotPresent",
            "name": "pgbouncer-auth-file",
            "volumeMounts": [
              {
                "mountPath": "/etc/pgbouncer/auth",
                "name": "pgbouncer-auth-file",
                "subPath": "etc/pgbouncer/auth"
              },
              {
                "mountPath": "/etc/pgbouncer/auth/pgbouncer-admin-password",
                "name": "pgbouncer-secrets",
                "readOnly": true,
                "subPath": "pgbouncer-admin-password"
              },
              {
                "mountPath": "/etc/pgbouncer/auth/pgbouncer-stats-password",
                "name": "pgbouncer-secrets",
                "readOnly": true,
                "subPath": "pgbouncer-stats-password"
              }
            ]
          },
          {
            "env": [
              {
                "name": "COMMAND",
                "value": "run-reconciliation-cycle"
              },
              {
                "name": "CLUSTER_NAME",
                "value": "test"
              },
              {
                "name": "CLUSTER_NAMESPACE",
                "value": "annotations"
              },
              {
                "name": "CLUSTER_CONTROLLER_POD_NAME",
                "valueFrom": {
                  "fieldRef": {
                    "apiVersion": "v1",
                    "fieldPath": "metadata.name"
                  }
                }
              },
              {
                "name": "CLUSTER_CONTROLLER_EXTENSIONS_REPOSITORY_URLS",
                "value": "https://extensions.stackgres.io/postgres/repository"
              },
              {
                "name": "CLUSTER_CONTROLLER_SKIP_OVERWRITE_SHARED_LIBRARIES",
                "value": "false"
              },
              {
                "name": "CLUSTER_CONTROLLER_RECONCILE_PGBOUNCER",
                "value": "false"
              },
              {
                "name": "CLUSTER_CONTROLLER_LOG_LEVEL"
              },
              {
                "name": "CLUSTER_CONTROLLER_SHOW_STACK_TRACES"
              },
              {
                "name": "APP_OPTS"
              },
              {
                "name": "DEBUG_CLUSTER_CONTROLLER"
              },
              {
                "name": "DEBUG_CLUSTER_CONTROLLER_SUSPEND"
              }
            ],
            "image": "quay.io/stackgres/cluster-controller:main-jvm",
            "imagePullPolicy": "IfNotPresent",
            "name": "cluster-reconciliation-cycle",
            "volumeMounts": [
              {
                "mountPath": "/var/lib/postgresql",
                "name": "test-data"
              }
            ]
          }
        ],
        "securityContext": {
          "fsGroup": 999,
          "runAsGroup": 999,
          "runAsNonRoot": true,
          "runAsUser": 999
        },
        "serviceAccountName": "test-patroni",
        "shareProcessNamespace": true,
        "terminationGracePeriodSeconds": 60,
        "volumes": [
          {
            "emptyDir": {
              "medium": "Memory"
            },
            "name": "socket"
          },
          {
            "emptyDir": {
              "medium": "Memory"
            },
            "name": "dshm"
          },
          {
            "emptyDir": {},
            "name": "log"
          },
          {
            "emptyDir": {},
            "name": "local-bin"
          },
          {
            "configMap": {
              "defaultMode": 444,
              "name": "test"
            },
            "name": "patroni-env"
          },
          {
            "emptyDir": {},
            "name": "patroni-config"
          },
          {
            "configMap": {
              "defaultMode": 444,
              "name": "test-backup"
            },
            "name": "backup-env"
          },
          {
            "name": "backup-secret",
            "secret": {
              "defaultMode": 444,
              "secretName": "test-backup"
            }
          },
          {
            "emptyDir": {},
            "name": "user"
          },
          {
            "configMap": {
              "name": "test-internal-00000-prometheus-postgres-exporter-init-postgres",
              "optional": false
            },
            "name": "test-internal-00000-prometheus-postgres-exporter-init-postgres"
          },
          {
            "configMap": {
              "name": "test-envoy-config"
            },
            "name": "envoy"
          },
          {
            "configMap": {
              "name": "test-prometheus-postgres-exporter-config"
            },
            "name": "queries"
          },
          {
            "emptyDir": {},
            "name": "pgbouncer-auth-file"
          },
          {
            "configMap": {
              "name": "test-connection-pooling-config"
            },
            "name": "pgbouncer"
          },
          {
            "emptyDir": {},
            "name": "empty-base"
          },
          {
            "configMap": {
              "defaultMode": 444,
              "name": "test-templates"
            },
            "name": "templates"
          },
          {
            "name": "pgbouncer-secrets",
            "secret": {
              "secretName": "test"
            }
          }
        ]
      }
    },
    "updateStrategy": {
      "type": "OnDelete"
    },
    "volumeClaimTemplates": [
      {
        "apiVersion": "v1",
        "kind": "PersistentVolumeClaim",
        "metadata": {
          "annotations": {
            "allResourceAnnotation": "allResourceValue"
          },
          "labels": {
            "app": "StackGresCluster",
            "cluster-name": "test",
            "cluster-uid": "df08342c-9480-43d7-89d4-22d182a6ba08"
          },
          "name": "test-data",
          "namespace": "annotations",
          "ownerReferences": [
            {
              "apiVersion": "stackgres.io/v1",
              "controller": true,
              "kind": "SGCluster",
              "name": "test",
              "uid": "df08342c-9480-43d7-89d4-22d182a6ba08"
            }
          ]
        },
        "spec": {
          "accessModes": [
            "ReadWriteOnce"
          ],
          "resources": {
            "requests": {
              "storage": "500Mi"
            }
          },
          "volumeMode": "Filesystem"
        },
        "status": {
          "phase": "Pending"
        }
      }
    ]
  }
}

{
  "apiVersion" : "apps/v1",
  "kind" : "StatefulSet",
  "metadata" : {
    "labels" : {
      "app" : "StackGresDistributedLogs",
      "stackgres.io/distributed-logs-name" : "distributedlogs"
    },
    "name" : "distributedlogs",
    "namespace" : "distributed-logs-5fce2f1c",
    "ownerReferences" : [ {
      "apiVersion" : "stackgres.io/v1beta1",
      "kind" : "SGDistributedLogs",
      "controller" : true,
      "name" : "distributedlogs",
      "uid" : "566ebf17-c3d0-492b-a182-cd7d0fab6c04"
    } ]
  },
  "spec" : {
    "replicas" : 1,
    "selector" : {
      "matchLabels" : {
        "app" : "StackGresDistributedLogs",
        "stackgres.io/distributed-logs-uid" : "566ebf17-c3d0-492b-a182-cd7d0fab6c04",
        "stackgres.io/distributed-logs-name" : "distributedlogs",
        "stackgres.io/cluster" : "true",
        "stackgres.io/disruptible" : "true"
      }
    },
    "serviceName" : "distributedlogs",
    "template" : {
      "metadata" : {
        "labels" : {
          "app" : "StackGresDistributedLogs",
          "stackgres.io/distributed-logs-uid" : "566ebf17-c3d0-492b-a182-cd7d0fab6c04",
          "stackgres.io/distributed-logs-name" : "distributedlogs",
          "stackgres.io/cluster" : "true",
          "stackgres.io/disruptible" : "true"
        }
      },
      "spec" : {
        "containers" : [ {
          "command" : [ "/bin/sh", "-ex", "/usr/local/bin/start-patroni.sh" ],
          "env" : [ {
            "name" : "PATRONI_NAME",
            "valueFrom" : {
              "fieldRef" : {
                "fieldPath" : "metadata.name"
              }
            }
          }, {
            "name" : "PATRONI_KUBERNETES_NAMESPACE",
            "valueFrom" : {
              "fieldRef" : {
                "fieldPath" : "metadata.namespace"
              }
            }
          }, {
            "name" : "PATRONI_KUBERNETES_POD_IP",
            "valueFrom" : {
              "fieldRef" : {
                "fieldPath" : "status.podIP"
              }
            }
          }, {
            "name" : "PATRONI_SUPERUSER_PASSWORD",
            "valueFrom" : {
              "secretKeyRef" : {
                "key" : "superuser-password",
                "name" : "distributedlogs"
              }
            }
          }, {
            "name" : "PATRONI_REPLICATION_PASSWORD",
            "valueFrom" : {
              "secretKeyRef" : {
                "key" : "replication-password",
                "name" : "distributedlogs"
              }
            }
          }, {
            "name" : "PATRONI_authenticator_PASSWORD",
            "valueFrom" : {
              "secretKeyRef" : {
                "key" : "authenticator-password",
                "name" : "distributedlogs"
              }
            }
          }, {
            "name" : "PATRONI_authenticator_OPTIONS",
            "value" : "superuser"
          }, {
            "name" : "SHARED_MEMORY_PATH",
            "value" : "/dev/shm"
          }, {
            "name" : "ETC_PASSWD_PATH",
            "value" : "/etc/passwd"
          }, {
            "name" : "ETC_GROUP_PATH",
            "value" : "/etc/group"
          }, {
            "name" : "ETC_SHADOW_PATH",
            "value" : "/etc/shadow"
          }, {
            "name" : "ETC_GSHADOW_PATH",
            "value" : "/etc/gshadow"
          }, {
            "name" : "LOCAL_BIN_PATH",
            "value" : "/usr/local/bin"
          }, {
            "name" : "LOCAL_BIN_START_PATRONI_SH_PATH",
            "value" : "/usr/local/bin/start-patroni.sh"
          }, {
            "name" : "LOCAL_BIN_POST_INIT_SH_PATH",
            "value" : "/usr/local/bin/post-init.sh"
          }, {
            "name" : "LOCAL_BIN_EXEC_WITH_ENV_PATH",
            "value" : "/usr/local/bin/exec-with-env"
          }, {
            "name" : "PG_BASE_PATH",
            "value" : "/var/lib/postgresql"
          }, {
            "name" : "PG_DATA_PATH",
            "value" : "/var/lib/postgresql/data"
          }, {
            "name" : "PG_RUN_PATH",
            "value" : "/var/run/postgresql"
          }, {
            "name" : "PG_LOG_PATH",
            "value" : "/var/log/postgresql"
          }, {
            "name" : "BASE_ENV_PATH",
            "value" : "/etc/env"
          }, {
            "name" : "TEMPLATES_PATH",
            "value" : "/templates"
          }, {
            "name" : "PATRONI_ENV",
            "value" : "patroni"
          }, {
            "name" : "POSTGRES_ENTRY_PORT",
            "value" : "7432"
          }, {
            "name" : "POSTGRES_REPL_ENTRY_PORT",
            "value" : "7433"
          }, {
            "name" : "POSTGRES_POOL_PORT",
            "value" : "6432"
          }, {
            "name" : "POSTGRES_PORT",
            "value" : "5432"
          } ],
          "envFrom" : [ {
            "configMapRef" : {
              "name" : "distributedlogs"
            }
          } ],
          "image" : "docker.io/ongres/patroni:v1.6.5-pg12.4-build-5.1",
          "imagePullPolicy" : "IfNotPresent",
          "livenessProbe" : {
            "failureThreshold" : 6,
            "httpGet" : {
              "path" : "/cluster",
              "port" : 8008,
              "scheme" : "HTTP"
            },
            "initialDelaySeconds" : 15,
            "periodSeconds" : 20
          },
          "name" : "patroni",
          "ports" : [ {
            "containerPort" : 7432,
            "name" : "pgport"
          }, {
            "containerPort" : 7433,
            "name" : "pgreplication"
          }, {
            "containerPort" : 8008
          } ],
          "readinessProbe" : {
            "httpGet" : {
              "path" : "/read-only",
              "port" : 8008,
              "scheme" : "HTTP"
            },
            "initialDelaySeconds" : 5,
            "periodSeconds" : 10
          },
          "volumeMounts" : [ {
            "mountPath" : "/var/lib/postgresql",
            "name" : "data"
          }, {
            "mountPath" : "/dev/shm",
            "name" : "dshm"
          }, {
            "mountPath" : "/var/run/postgresql",
            "name" : "socket"
          }, {
            "mountPath" : "/usr/local/bin",
            "name" : "local",
            "subPath" : "usr/local/bin"
          }, {
            "mountPath" : "/var/log/postgresql",
            "name" : "local",
            "subPath" : "var/log/postgresql"
          }, {
            "mountPath" : "/etc/passwd",
            "name" : "local",
            "readOnly" : true,
            "subPath" : "etc/passwd"
          }, {
            "mountPath" : "/etc/group",
            "name" : "local",
            "readOnly" : true,
            "subPath" : "etc/group"
          }, {
            "mountPath" : "/etc/shadow",
            "name" : "local",
            "readOnly" : true,
            "subPath" : "etc/shadow"
          }, {
            "mountPath" : "/etc/gshadow",
            "name" : "local",
            "readOnly" : true,
            "subPath" : "etc/gshadow"
          }, {
            "mountPath" : "/etc/env/patroni",
            "name" : "patroni-env"
          }, {
            "mountPath" : "/etc/patroni",
            "name" : "patroni-config"
          }, {
            "mountPath" : "/etc/patroni/init-script.d/distributed-logs-template.sql",
            "name" : "distributed-logs-template",
            "readOnly" : true,
            "subPath" : "distributed-logs-template.sql"
          } ]
        }, {
          "args" : [ "echo 'Wait for postgres to be up, running and initialized!'\nuntil curl -s localhost:8008/read-only --fail > /dev/null; do sleep 1; done\nexec /usr/local/bin/fluentd \\\n  -c \"/etc/fluentd/fluentd.conf\"\n" ],
          "command" : [ "/bin/sh", "-exc" ],
          "image" : "docker.io/ongres/fluentd:v1.9.3-build-5.1",
          "imagePullPolicy" : "IfNotPresent",
          "livenessProbe" : {
            "failureThreshold" : 6,
            "initialDelaySeconds" : 15,
            "periodSeconds" : 20,
            "tcpSocket" : {
              "port" : 12225
            }
          },
          "name" : "fluentd",
          "ports" : [ {
            "containerPort" : 12225,
            "name" : "fluentd-forward"
          } ],
          "readinessProbe" : {
            "initialDelaySeconds" : 5,
            "periodSeconds" : 10,
            "tcpSocket" : {
              "port" : 12225
            }
          },
          "volumeMounts" : [ {
            "mountPath" : "/var/run/postgresql",
            "name" : "socket"
          }, {
            "mountPath" : "/etc/fluentd",
            "name" : "fluentd",
            "readOnly" : true
          }, {
            "mountPath" : "/var/log/fluentd",
            "name" : "fluentd-buffer",
            "readOnly" : false
          } ]
        }, {
          "env" : [ {
            "name" : "DISTRIBUTEDLOGS_NAME",
            "value" : "distributedlogs"
          }, {
            "name" : "DISTRIBUTEDLOGS_NAMESPACE",
            "value" : "distributed-logs-5fce2f1c"
          }, {
            "name" : "DISTRIBUTEDLOGS_CONTROLLER_LOG_LEVEL"
          }, {
            "name" : "DISTRIBUTEDLOGS_CONTROLLER_SHOW_STACK_TRACES"
          }, {
            "name" : "DEBUG_DISTRIBUTEDLOGS_CONTROLLER"
          }, {
            "name" : "DEBUG_DISTRIBUTEDLOGS_CONTROLLER_SUSPEND"
          }, {
            "name" : "DISTRIBUTEDLOGS_CONTROLLER_POD_NAME",
            "valueFrom" : {
              "fieldRef" : {
                "apiVersion" : "v1",
                "fieldPath" : "metadata.name"
              }
            }
          } ],
          "image" : "docker.io/stackgres/distributedlogs-controller:main",
          "imagePullPolicy" : "IfNotPresent",
          "livenessProbe" : {
            "httpGet" : {
              "path" : "/q/health/live",
              "port" : 8080,
              "scheme" : "HTTP"
            },
            "initialDelaySeconds" : 5,
            "periodSeconds" : 30,
            "timeoutSeconds" : 10
          },
          "name" : "distributedlogs-controller",
          "readinessProbe" : {
            "httpGet" : {
              "path" : "/q/health/ready",
              "port" : 8080,
              "scheme" : "HTTP"
            },
            "initialDelaySeconds" : 5,
            "periodSeconds" : 30,
            "timeoutSeconds" : 2
          },
          "volumeMounts" : [ {
            "mountPath" : "/var/run/postgresql",
            "name" : "socket"
          }, {
            "mountPath" : "/etc/fluentd",
            "name" : "fluentd-config",
            "readOnly" : true
          }, {
            "mountPath" : "/fluentd",
            "name" : "fluentd",
            "readOnly" : false
          } ]
        } ],
        "initContainers" : [ {
          "command" : [ "/bin/sh", "-ecx", "cp $TEMPLATES_PATH/start-patroni.sh \"$LOCAL_BIN_PATH\" && cp $TEMPLATES_PATH/start-patroni-with-restore.sh \"$LOCAL_BIN_PATH\" && cp $TEMPLATES_PATH/post-init.sh \"$LOCAL_BIN_PATH\" && cp $TEMPLATES_PATH/exec-with-env \"$LOCAL_BIN_PATH\" && sed -i \"s#\\${POSTGRES_PORT}#${POSTGRES_PORT}#g\" \"$LOCAL_BIN_PATH/post-init.sh\" && sed -i \"s#\\${BASE_ENV_PATH}#${BASE_ENV_PATH}#g\" \"$LOCAL_BIN_PATH/exec-with-env\" && sed -i \"s#\\${BASE_SECRET_PATH}#${BASE_SECRET_PATH}#g\" \"$LOCAL_BIN_PATH/exec-with-env\" && chmod a+x \"$LOCAL_BIN_PATH/start-patroni.sh\" && chmod a+x \"$LOCAL_BIN_PATH/start-patroni-with-restore.sh\" && chmod a+x \"$LOCAL_BIN_PATH/post-init.sh\" && chmod a+x \"$LOCAL_BIN_PATH/exec-with-env\"" ],
          "env" : [ {
            "name" : "SHARED_MEMORY_PATH",
            "value" : "/dev/shm"
          }, {
            "name" : "ETC_PASSWD_PATH",
            "value" : "/etc/passwd"
          }, {
            "name" : "ETC_GROUP_PATH",
            "value" : "/etc/group"
          }, {
            "name" : "ETC_SHADOW_PATH",
            "value" : "/etc/shadow"
          }, {
            "name" : "ETC_GSHADOW_PATH",
            "value" : "/etc/gshadow"
          }, {
            "name" : "LOCAL_BIN_PATH",
            "value" : "/usr/local/bin"
          }, {
            "name" : "LOCAL_BIN_START_PATRONI_SH_PATH",
            "value" : "/usr/local/bin/start-patroni.sh"
          }, {
            "name" : "LOCAL_BIN_POST_INIT_SH_PATH",
            "value" : "/usr/local/bin/post-init.sh"
          }, {
            "name" : "LOCAL_BIN_EXEC_WITH_ENV_PATH",
            "value" : "/usr/local/bin/exec-with-env"
          }, {
            "name" : "PG_BASE_PATH",
            "value" : "/var/lib/postgresql"
          }, {
            "name" : "PG_DATA_PATH",
            "value" : "/var/lib/postgresql/data"
          }, {
            "name" : "PG_RUN_PATH",
            "value" : "/var/run/postgresql"
          }, {
            "name" : "PG_LOG_PATH",
            "value" : "/var/log/postgresql"
          }, {
            "name" : "BASE_ENV_PATH",
            "value" : "/etc/env"
          }, {
            "name" : "TEMPLATES_PATH",
            "value" : "/templates"
          } ],
          "image" : "busybox:1.31.1",
          "imagePullPolicy" : "IfNotPresent",
          "name" : "setup-scripts",
          "volumeMounts" : [ {
            "mountPath" : "/templates",
            "name" : "distributed-logs-template"
          }, {
            "mountPath" : "/usr/local/bin",
            "name" : "local",
            "subPath" : "usr/local/bin"
          } ]
        }, {
          "command" : [ "/bin/sh", "-ecx", "USER=postgres && UID=$(id -u) && GID=$(id -g) && SHELL=/bin/sh && cp \"$TEMPLATES_PATH/passwd\" /local/etc/. && cp \"$TEMPLATES_PATH/group\" /local/etc/. && cp \"$TEMPLATES_PATH/shadow\" /local/etc/. && cp \"$TEMPLATES_PATH/gshadow\" /local/etc/. && echo \"$USER:x:$UID:$GID::$PG_BASE_PATH:$SHELL\" >> /local/etc/passwd && chmod 644 /local/etc/passwd && echo \"$USER:x:$GID:\" >> /local/etc/group && chmod 644 /local/etc/group && echo \"$USER\"':!!:18179:0:99999:7:::' >> /local/etc/shadow && chmod 000 /local/etc/shadow && echo \"$USER\"':!::' >> /local/etc/gshadow && chmod 000 /local/etc/gshadow" ],
          "env" : [ {
            "name" : "SHARED_MEMORY_PATH",
            "value" : "/dev/shm"
          }, {
            "name" : "ETC_PASSWD_PATH",
            "value" : "/etc/passwd"
          }, {
            "name" : "ETC_GROUP_PATH",
            "value" : "/etc/group"
          }, {
            "name" : "ETC_SHADOW_PATH",
            "value" : "/etc/shadow"
          }, {
            "name" : "ETC_GSHADOW_PATH",
            "value" : "/etc/gshadow"
          }, {
            "name" : "LOCAL_BIN_PATH",
            "value" : "/usr/local/bin"
          }, {
            "name" : "LOCAL_BIN_START_PATRONI_SH_PATH",
            "value" : "/usr/local/bin/start-patroni.sh"
          }, {
            "name" : "LOCAL_BIN_POST_INIT_SH_PATH",
            "value" : "/usr/local/bin/post-init.sh"
          }, {
            "name" : "LOCAL_BIN_EXEC_WITH_ENV_PATH",
            "value" : "/usr/local/bin/exec-with-env"
          }, {
            "name" : "PG_BASE_PATH",
            "value" : "/var/lib/postgresql"
          }, {
            "name" : "PG_DATA_PATH",
            "value" : "/var/lib/postgresql/data"
          }, {
            "name" : "PG_RUN_PATH",
            "value" : "/var/run/postgresql"
          }, {
            "name" : "PG_LOG_PATH",
            "value" : "/var/log/postgresql"
          }, {
            "name" : "BASE_ENV_PATH",
            "value" : "/etc/env"
          }, {
            "name" : "TEMPLATES_PATH",
            "value" : "/templates"
          } ],
          "image" : "busybox:1.31.1",
          "imagePullPolicy" : "IfNotPresent",
          "name" : "setup-arbitrary-user",
          "volumeMounts" : [ {
            "mountPath" : "/templates",
            "name" : "distributed-logs-template"
          }, {
            "mountPath" : "/local/etc",
            "name" : "local",
            "readOnly" : false,
            "subPath" : "etc"
          } ]
        } ],
        "securityContext" : {
          "fsGroup" : 999,
          "runAsGroup" : 999,
          "runAsNonRoot" : true,
          "runAsUser" : 999
        },
        "shareProcessNamespace" : true,
        "terminationGracePeriodSeconds" : 60,
        "volumes" : [ {
          "name" : "data",
          "persistentVolumeClaim" : {
            "claimName" : "distributedlogs-data"
          }
        }, {
          "emptyDir" : {
            "medium" : "Memory"
          },
          "name" : "socket"
        }, {
          "emptyDir" : {
            "medium" : "Memory"
          },
          "name" : "dshm"
        }, {
          "emptyDir" : { },
          "name" : "local"
        }, {
          "configMap" : {
            "name" : "distributedlogs"
          },
          "name" : "patroni-env"
        }, {
          "emptyDir" : { },
          "name" : "patroni-config"
        }, {
          "configMap" : {
            "name" : "distributed-logs-template",
            "optional" : false
          },
          "name" : "distributed-logs-template"
        }, {
          "configMap" : {
            "name" : "distributedlogs-fluentd"
          },
          "name" : "fluentd-config"
        }, {
          "emptyDir" : { },
          "name" : "fluentd"
        }, {
          "emptyDir" : { },
          "name" : "fluentd-buffer"
        } ]
      }
    },
    "updateStrategy" : {
      "type" : "OnDelete"
    },
    "volumeClaimTemplates" : [ {
      "apiVersion" : "v1",
      "kind" : "PersistentVolumeClaim",
      "metadata" : {
        "labels" : {
          "app" : "StackGresDistributedLogs",
          "stackgres.io/distributed-logs-name" : "distributedlogs"
        },
        "name" : "distributedlogs-data",
        "namespace" : "distributed-logs-5fce2f1c"
      },
      "spec" : {
        "accessModes" : [ "ReadWriteOnce" ],
        "resources" : {
          "requests" : {
            "storage" : "128Mi"
          }
        }
      }
    } ]
  }
}
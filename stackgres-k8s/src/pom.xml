<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (C) 2019 OnGres, Inc.
  ~ SPDX-License-Identifier: AGPL-3.0-or-later
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>io.stackgres</groupId>
  <artifactId>stackgres-parent</artifactId>
  <version>1.0.0-alpha2-SNAPSHOT</version>
  <packaging>pom</packaging>
  <name>Parent POM</name>

  <inceptionYear>2019</inceptionYear>

  <organization>
    <name>OnGres, Inc.</name>
    <url>https://www.ongres.com</url>
  </organization>

  <licenses>
    <license>
      <name>GNU Affero General Public License 3.0</name>
      <url>https://www.gnu.org/licenses/agpl-3.0.txt</url>
    </license>
  </licenses>

  <modules>
    <module>common</module>
    <module>operator-framework</module>
    <module>operator</module>
    <module>api-web</module>
    <module>cluster-controller</module>
    <module>distributedlogs-controller</module>
    <module>test-util</module>
    <module>jobs</module>
    <!-- <module>cli</module> -->
  </modules>

  <scm>
    <url>https://gitlab.com/stackgres/stackgres</url>
    <developerConnection>scm:git:git@gitlab.com:stackgres/stackgres.git</developerConnection>
    <tag>HEAD</tag>
  </scm>

  <properties>
    <stackgres.group>stackgres.io</stackgres.group>
    <stackgres.crd.version>v1</stackgres.crd.version>
    <stackgres.operatorName>stackgres-operator</stackgres.operatorName>
    <stackgres.operatorNamespace>stackgres</stackgres.operatorNamespace>
    <stackgres.operatorImageVersion>development-jvm</stackgres.operatorImageVersion>
    <stackgres.operatorIP>localhost</stackgres.operatorIP>
    <stackgres.operatorVersion>${project.version}</stackgres.operatorVersion>
    <stackgres.documentation.uri>https://stackgres.io/doc/</stackgres.documentation.uri>
    <stackgres.documentation.errorsPath>/api/responses/error#</stackgres.documentation.errorsPath>
    <quarkus.http.ssl.certificate.file>/etc/operator/certs/server.crt</quarkus.http.ssl.certificate.file>
    <quarkus.http.ssl.certificate.key-file>/etc/operator/certs/root.key</quarkus.http.ssl.certificate.key-file>
    <stackgres.conversionWebhooks>false</stackgres.conversionWebhooks>
    <stackgres.crdUpgrade>false</stackgres.crdUpgrade>
    <stackgres.containerRegistry>docker.io</stackgres.containerRegistry>
    <stackgres.container.patroni>1.6.5-build-6.0-dev</stackgres.container.patroni>
    <stackgres.container.prometheus-postgres-exporter>0.8.0-build-5.1</stackgres.container.prometheus-postgres-exporter>
    <stackgres.container.postgresql>11.8-build-6.0-dev,11.9-build-6.0-dev,11.11-build-6.0-dev,12.3-build-6.0-dev,12.4-build-6.0-dev,12.6-build-6.0-dev</stackgres.container.postgresql>
    <stackgres.container.envoy>1.15.0-build-5.1</stackgres.container.envoy>
    <stackgres.container.pgbouncer>1.13.0-build-5.1</stackgres.container.pgbouncer>
    <stackgres.container.fluentbit>1.4.4-build-5.1</stackgres.container.fluentbit>
    <stackgres.container.fluentd>1.9.3-build-5.1</stackgres.container.fluentd>

    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <!-- Java compilation -->
    <java.version>11</java.version>
    <maven.compiler.release>${java.version}</maven.compiler.release>
    <maven.compiler.source>${java.version}</maven.compiler.source>
    <maven.compiler.target>${java.version}</maven.compiler.target>
    <!-- Dependencies versions -->
    <quarkus.version>1.12.2.Final</quarkus.version>
    <kubernetes-client.version>5.2.0</kubernetes-client.version>
    <jool.version>0.9.14</jool.version>
    <immutables.version>2.8.8</immutables.version>
    <checkstyle.version>8.41</checkstyle.version>
    <spotbugs.version>4.2.1</spotbugs.version>
    <pmd.version>6.31.0</pmd.version>
    <docker-junit-extension.version>1.2.15</docker-junit-extension.version>
    <jersey.version>2.32</jersey.version>
    <fluent-process.version>1.0.1</fluent-process.version>
    <log4j.version>2.13.3</log4j.version>
    <jooq.version>3.13.4</jooq.version>
    <jetbrains-annotations.version>20.1.0</jetbrains-annotations.version>
    <mockito.version>3.0.0</mockito.version>
    <swagger-annotations.version>2.1.7</swagger-annotations.version>
    <reflections.version>0.9.12</reflections.version>
    <!-- Plugins versions -->
    <compiler-plugin.version>3.8.1</compiler-plugin.version>
    <jar-plugin.version>3.2.0</jar-plugin.version>
    <clean-plugin.version>3.1.0</clean-plugin.version>
    <resources-plugin.version>3.1.0</resources-plugin.version>
    <surefire-plugin.version>3.0.0-M5</surefire-plugin.version>
    <failsafe-plugin.version>3.0.0-M5</failsafe-plugin.version>
    <checkstyle-plugin.version>3.1.2</checkstyle-plugin.version>
    <spotbugs-plugin.version>4.2.0</spotbugs-plugin.version>
    <pmd-plugin.version>3.14.0</pmd-plugin.version>
    <enforcer-plugin.version>3.0.0-M3</enforcer-plugin.version>
    <dependency-plugin.version>3.1.1</dependency-plugin.version>
    <docker-maven-plugin.version>0.34.1</docker-maven-plugin.version>
    <jandex-maven-plugin.version>1.0.8</jandex-maven-plugin.version>
    <jandex.version>2.2.3.Final</jandex.version>
    <exec-maven-plugin.version>3.0.0</exec-maven-plugin.version>
    <build-helper-maven-plugin.version>3.2.0</build-helper-maven-plugin.version>
    <swagger-maven-plugin.version>2.1.5</swagger-maven-plugin.version>
    <!-- Checkstyle, SpotBugs and PMD properties -->
    <checks.location>${project.basedir}/checks</checks.location>
    <checkstyle.config.location>${checks.location}/checkstyle.xml</checkstyle.config.location>
    <checkstyle.header.file>${checks.location}/checkstyle-header.txt</checkstyle.header.file>
    <checkstyle.suppressions.location>${checks.location}/checkstyle-suppressions.xml</checkstyle.suppressions.location>
    <spotbugs.excludeFilterFile>${checks.location}/spotbugs-exclude.xml</spotbugs.excludeFilterFile>

    <it.image>stackgres/it:11.0</it.image>
    <buildah.image>quay.io/buildah/stable:v1.15.0</buildah.image>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>kubernetes-client-bom</artifactId>
        <version>${kubernetes-client.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>io.quarkus</groupId>
        <artifactId>quarkus-universe-bom</artifactId>
        <version>${quarkus.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>com.ongres</groupId>
        <artifactId>docker-junit-extension</artifactId>
        <scope>test</scope>
        <version>${docker-junit-extension.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.glassfish.jersey.connectors</groupId>
            <artifactId>jersey-apache-connector</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-client</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.glassfish.jersey.inject</groupId>
            <artifactId>jersey-hk2</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.glassfish.jersey.inject</groupId>
        <artifactId>jersey-hk2</artifactId>
        <version>${jersey.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.glassfish.jersey.connectors</groupId>
        <artifactId>jersey-apache-connector</artifactId>
        <version>${jersey.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.jooq</groupId>
        <artifactId>jooq</artifactId>
        <version>${jooq.version}</version>
        <exclusions>
          <exclusion>
            <groupId>javax.xml.bind</groupId>
            <artifactId>jaxb-api</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>io.swagger.core.v3</groupId>
        <artifactId>swagger-annotations</artifactId>
        <version>${swagger-annotations.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.ow2.asm</groupId>
        <artifactId>asm</artifactId>
        <version>9.0</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>com.ongres</groupId>
        <artifactId>fluent-process</artifactId>
        <version>${fluent-process.version}</version>
      </dependency>
      <dependency>
        <groupId>org.reflections</groupId>
        <artifactId>reflections</artifactId>
        <version>${reflections.version}</version>
        <scope>test</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <exclusions>
        <exclusion>
          <groupId>com.google.guava</groupId>
          <artifactId>listenablefuture</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.google.code.findbugs</groupId>
          <artifactId>jsr305</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.checkerframework</groupId>
          <artifactId>checker-qual</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.google.errorprone</groupId>
          <artifactId>error_prone_annotations</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.google.j2objc</groupId>
          <artifactId>j2objc-annotations</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>animal-sniffer-annotations</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.jooq</groupId>
      <artifactId>jool</artifactId>
      <version>${jool.version}</version>
    </dependency>
    <dependency>
      <groupId>org.immutables</groupId>
      <artifactId>value</artifactId>
      <version>${immutables.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.google.errorprone</groupId>
      <artifactId>error_prone_annotations</artifactId>
      <optional>true</optional>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.jetbrains</groupId>
      <artifactId>annotations</artifactId>
      <version>${jetbrains-annotations.version}</version>
      <optional>true</optional>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.github.spotbugs</groupId>
      <artifactId>spotbugs-annotations</artifactId>
      <version>${spotbugs.version}</version>
      <exclusions>
        <exclusion>
          <groupId>com.google.code.findbugs</groupId>
          <artifactId>jsr305</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <artifactId>maven-jar-plugin</artifactId>
        <version>${jar-plugin.version}</version>
      </plugin>
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <version>${clean-plugin.version}</version>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${surefire-plugin.version}</version>
        <configuration>
          <systemProperties>
            <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
            <maven.home>${maven.home}</maven.home>
          </systemProperties>
          <classpathDependencyExcludes>
            <classpathDependencyScopeExclude>test</classpathDependencyScopeExclude>
            <classpathDependencyExclude>org.graalvm.nativeimage:svm</classpathDependencyExclude>
          </classpathDependencyExcludes>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${compiler-plugin.version}</version>
        <configuration>
          <compilerArgs>
            <arg>-Xlint:all</arg>
            <arg>-Xlint:-processing</arg> <!-- Ignore warning: No processor claimed any of these annotations -->
          </compilerArgs>
          <showDeprecation>true</showDeprecation>
          <showWarnings>true</showWarnings>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>${enforcer-plugin.version}</version>
        <executions>
          <execution>
            <id>enforce-versions</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireMavenVersion>
                  <version>[3.6.3,)</version>
                </requireMavenVersion>
                <requireJavaVersion>
                  <version>${java.version}</version>
                </requireJavaVersion>
              </rules>
            </configuration>
          </execution>
          <execution>
            <id>enforce-no-snapshots</id>
            <configuration>
              <rules>
                <requireReleaseVersion>
                  <message>No Snapshots Allowed!</message>
                </requireReleaseVersion>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-release-plugin</artifactId>
        <configuration>
          <tagNameFormat>@{project.version}</tagNameFormat>
          <pushChanges>false</pushChanges>
          <autoVersionSubmodules>true</autoVersionSubmodules>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.jboss.jandex</groupId>
        <artifactId>jandex-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>${checkstyle-plugin.version}</version>
        <dependencies>
          <dependency>
            <groupId>com.puppycrawl.tools</groupId>
            <artifactId>checkstyle</artifactId>
            <version>${checkstyle.version}</version>
          </dependency>
        </dependencies>
        <configuration>
          <violationSeverity>error</violationSeverity>
          <failOnViolation>true</failOnViolation>
          <failsOnError>true</failsOnError>
          <consoleOutput>true</consoleOutput>
          <linkXRef>false</linkXRef>
          <includeResources>false</includeResources>
          <includeTestSourceDirectory>false</includeTestSourceDirectory>
          <includeTestResources>false</includeTestResources>
        </configuration>
      </plugin>
      <plugin>
        <groupId>io.quarkus</groupId>
        <artifactId>quarkus-maven-plugin</artifactId>
        <version>${quarkus.version}</version>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
    </plugins>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>exec-maven-plugin</artifactId>
          <version>${exec-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>${build-helper-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.jboss.jandex</groupId>
          <artifactId>jandex-maven-plugin</artifactId>
          <version>${jandex-maven-plugin.version}</version>
          <executions>
            <execution>
              <id>make-index</id>
              <goals>
                <goal>jandex</goal>
              </goals>
            </execution>
          </executions>
          <dependencies>
            <dependency>
              <groupId>org.jboss</groupId>
              <artifactId>jandex</artifactId>
              <version>${jandex.version}</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>io.openapitools.swagger</groupId>
          <artifactId>swagger-maven-plugin</artifactId>
          <version>${swagger-maven-plugin.version}</version>
          <configuration>
            <skip>true</skip>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <profiles>
    <profile>
      <id>safer</id> <!-- Slower but safer profile used to look for errors before pushing to SCM -->
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-checkstyle-plugin</artifactId>
            <executions>
              <execution>
                <id>validate</id>
                <phase>verify</phase>
                <goals>
                  <goal>check</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>com.github.spotbugs</groupId>
            <artifactId>spotbugs-maven-plugin</artifactId>
            <version>${spotbugs-plugin.version}</version>
            <configuration>
              <effort>Max</effort>
              <threshold>Low</threshold>
              <xmlOutput>true</xmlOutput>
              <failOnError>true</failOnError>
              <addSourceDirs>true</addSourceDirs>
            </configuration>
            <dependencies>
              <dependency>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs</artifactId>
                <version>${spotbugs.version}</version>
              </dependency>
            </dependencies>
            <executions>
              <execution>
                <id>validate</id>
                <phase>verify</phase>
                <goals>
                  <goal>check</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-pmd-plugin</artifactId>
            <version>${pmd-plugin.version}</version>
            <configuration>
              <failOnViolation>true</failOnViolation> <!-- this is actually true by default, but can be disabled -->
              <printFailingErrors>true</printFailingErrors>
              <linkXRef>false</linkXRef>
            </configuration>
            <dependencies>
              <dependency>
                <groupId>net.sourceforge.pmd</groupId>
                <artifactId>pmd-core</artifactId>
                <version>${pmd.version}</version>
              </dependency>
              <dependency>
                <groupId>net.sourceforge.pmd</groupId>
                <artifactId>pmd-java</artifactId>
                <version>${pmd.version}</version>
              </dependency>
            </dependencies>
            <executions>
              <execution>
                <id>validate</id>
                <phase>verify</phase>
                <goals>
                  <goal>check</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>

#!/bin/sh

CHECK=true
LINK=false
CLONE=false

. "$TEST_SHELL_PATH/dbops-major-version-upgrade/abstract-major-version-upgrade"

shell_unit_test_dbops_major_version_upgrade_setup() {
  (
  echo "pod/test-0"
  echo "pod/test-1"
  ) > "$TEST_TARGET_PATH/cluster_pods"
  echo false > "$TEST_TARGET_PATH/pod_0_restarted"
  echo false > "$TEST_TARGET_PATH/pod_1_restarted"
  echo "pod/test-1" > "$TEST_TARGET_PATH/primary_pod"
}

shell_unit_test() {
  shell_unit_test_dbops_major_version_upgrade
}

mock kubectl kubectl_mock_overwrite

kubectl_mock_overwrite() {
  mokked
  case "$*" in
    ("get pod -n $CLUSTER_NAMESPACE test-1 --template={{ range .spec.containers }}{{ if eq .name \"$PATRONI_CONTAINER_NAME\" }}{{ .image }}{{ end }}{{ end }}")
    echo 'ongres/patroni:v1.6.5-pg11.8-build-5.1'
    ;;
    ("exec -n $CLUSTER_NAMESPACE test-1 -c $PATRONI_CONTAINER_NAME -- psql "*)
    STDIN="$(cat)"
    case "$STDIN" in
      (*"SHOW lc_collate"*)
      echo 'en_US.UTF-8'
      ;;
      (*"SHOW server_encoding"*)
      echo 'UTF8'
      ;;
      (*"data_checksums"*)
      echo 'true'
      ;;
    esac
    ;;
    ("exec -n $CLUSTER_NAMESPACE test-1 -c $PATRONI_CONTAINER_NAME -- patronictl switchover "*)
    echo "pod/test-0" > "$TEST_TARGET_PATH/primary_pod"
    ;;
    *)
    not_mokked
    ;;
  esac
}

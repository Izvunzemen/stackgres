#!/bin/sh

. "$TEST_SHELL_PATH/abstract-dbops"

RUN_SCRIPT_PATH=""
SET_RESULT_SCRIPT_PATH=""
OP_NAME=dbops
NORMALIZED_OP_NAME='dbops'
KEBAB_OP_NAME='dbops'
POD_0_RESTARTED=false
POD_1_RESTARTED=false

mock kubectl kubectl_mock

shell_unit_test_skip() {
  return 1;
}

kubectl_mock() {
  mokked
  case "$*" in
    ("get $CLUSTER_CRD_NAME "*" --template="'
  LOCK_POD={{ if .metadata.annotations.lockPod }}{{ .metadata.annotations.lockPod }}{{ else }}{{ end }}
  LOCK_TIMESTAMP={{ if .metadata.annotations.lockTimestamp }}{{ .metadata.annotations.lockTimestamp }}{{ else }}0{{ end }}
  RESOURCE_VERSION={{ .metadata.resourceVersion }}
  ')
    echo '
      LOCK_POD=test
      LOCK_TIMESTAMP=$(date +%s)
      RESOURCE_VERSION=test
      '
    ;;
    ("annotate $CLUSTER_CRD_NAME "*)
    ;;
    ("get $CLUSTER_CRD_NAME -n $CLUSTER_NAMESPACE $CLUSTER_NAME --template={{ if .status.dbOps }}{{ if .status.dbOps.$OP_NAME }}true{{ end }}{{ end }}")
    ;;
    ("get $DB_OPS_CRD_NAME -n $CLUSTER_NAMESPACE $DB_OPS_NAME --template={{ if .status }}true{{ else }}false{{ end }}")
    printf '%s' false
    ;;
    ("get $DB_OPS_CRD_NAME -n $CLUSTER_NAMESPACE $DB_OPS_NAME --template={{ if .status.restart }}replace{{ else }}add{{ end }}")
    printf '%s' add
    ;;
    ("get pods -n $CLUSTER_NAMESPACE -l $CLUSTER_POD_LABELS -o name")
    echo "pod/test-0"
    echo "pod/test-1"
    ;;
    ("get pods -n $CLUSTER_NAMESPACE -l $CLUSTER_PRIMARY_POD_LABELS -o name")
    echo "pod/test-0"
    ;;
    ("get pod -n $CLUSTER_NAMESPACE test-0 -o name")
    echo "pod/test-0"
    ;;
    ("get pod -n $CLUSTER_NAMESPACE test-0 --template={{ .metadata.annotations.status }}")
    echo '"pending_restart":false'
    ;;
    ("get pod -n $CLUSTER_NAMESPACE test-1 --template={{ .metadata.annotations.status }}")
    echo '"pending_restart":false'
    ;;
    ("get pod -n $CLUSTER_NAMESPACE test-0 --template={{ index .metadata.labels \"controller-revision-hash\" }}")
    if "$POD_0_RESTARTED"
    then
      echo hash-1
    else
      echo hash-0
    fi
    ;;
    ("get pod -n $CLUSTER_NAMESPACE test-1 --template={{ index .metadata.labels \"controller-revision-hash\" }}")
    if "$POD_1_RESTARTED"
    then
      echo hash-1
    else
      echo hash-0
    fi
    ;;
    ("get sts -n $CLUSTER_NAMESPACE $CLUSTER_NAME --template={{ .status.updateRevision }}")
    echo "hash-1"
    ;;
    ("patch $CLUSTER_CRD_NAME -n $CLUSTER_NAMESPACE $CLUSTER_NAME --type=json -p "*)
    ;;
    ("patch $DB_OPS_CRD_NAME -n $CLUSTER_NAMESPACE $DB_OPS_NAME --type=json -p "*)
    ;;
    ("wait pod -n $CLUSTER_NAMESPACE test-"*" --for condition=Ready --timeout 0")
    ;;
    ("delete pod -n $CLUSTER_NAMESPACE test-0")
    POD_0_RESTARTED=true
    ;;
    ("delete pod -n $CLUSTER_NAMESPACE test-1")
    POD_1_RESTARTED=true
    ;;
    *)
    not_mokked
    ;;
  esac
}

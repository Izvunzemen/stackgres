<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (C) 2019 OnGres, Inc.
  ~ SPDX-License-Identifier: AGPL-3.0-or-later
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>stackgres-parent</artifactId>
        <groupId>io.stackgres</groupId>
        <version>1.0.0-alpha1</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>stackgres-jobs</artifactId>
    <packaging>jar</packaging>
    <name>StackGres Jobs</name>

    <properties>
        <fabric8.version>4.12.0</fabric8.version>
        <checks.location>${project.parent.basedir}/checks</checks.location>
        <graalvm.version>20.1.0</graalvm.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>io.fabric8</groupId>
            <artifactId>kubernetes-client</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jboss.slf4j</groupId>
            <artifactId>slf4j-jboss-logging</artifactId>
            <version>1.2.0.Final</version><!--$NO-MVN-MAN-VER$-->
        </dependency>
        <dependency>
            <groupId>org.graalvm.sdk</groupId>
            <artifactId>graal-sdk</artifactId>
            <version>${graalvm.version}</version><!--$NO-MVN-MAN-VER$-->
        </dependency>
        <dependency>
            <groupId>org.graalvm.nativeimage</groupId>
            <artifactId>svm</artifactId>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.stackgres</groupId>
            <artifactId>stackgres-test-util</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>io.fabric8</groupId>
                <artifactId>kubernetes-client-bom</artifactId>
                <version>${fabric8.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <build>
        <finalName>stackgres-jobs</finalName>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
            <resource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                            <includeScope>compile</includeScope>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.2.0</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>lib/</classpathPrefix>
                            <mainClass>io.stackgres.jobs.Main</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>safer</id>
            <properties>
                <check-operator-values>true</check-operator-values>
            </properties>
        </profile>
        <profile>
            <id>native</id>
            <activation>
                <property>
                    <name>native</name>
                </property>
            </activation>
            <properties>
                <quarkus.package.type>native</quarkus.package.type>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.graalvm.nativeimage</groupId>
                        <artifactId>native-image-maven-plugin</artifactId>
                        <version>${graalvm.version}</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>native-image</goal>
                                </goals>
                                <phase>package</phase>
                            </execution>
                        </executions>
                        <configuration>
                            <skip>false</skip>
                            <imageName>stackgres-jobs-runner</imageName>
                            <buildArgs>
                                -H:IncludeResources=.*/*.yaml
                                -H:IncludeResources=.*/*.properties
                                -H:IncludeResources=.*/*.txt
                                -H:ReflectionConfigurationFiles=classes/reflectconfig.json
                                -H:+AddAllCharsets
                                --enable-https
                                --no-fallback
                                --allow-incomplete-classpath
                            </buildArgs>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>build-image-jvm</id>
            <properties>
                <docker.removeVolumes>true</docker.removeVolumes>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>${docker-maven-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>build-image</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>stop</goal>
                                    <goal>build</goal>
                                    <goal>start</goal>
                                    <goal>stop</goal>
                                </goals>
                                <configuration>
                                    <containerNamePattern>%a</containerNamePattern>
                                    <images>
                                        <image>
                                            <alias>ongres-jvm-builder</alias>
                                            <name>ongres-jvm-builder</name>
                                            <build>
                                                <cleanup>remove</cleanup>
                                                <from>${buildah.image}</from>
                                                <assembly>
                                                    <targetDir>/jobs</targetDir>
                                                    <inline>
                                                        <fileSets>
                                                            <fileSet>
                                                                <directory>${project.basedir}</directory>
                                                                <outputDirectory>/</outputDirectory>
                                                                <excludes>
                                                                    <exclude>target/docker/**</exclude>
                                                                </excludes>
                                                            </fileSet>
                                                        </fileSets>
                                                    </inline>
                                                </assembly>
                                            </build>
                                            <run>
                                                <privileged>true</privileged>
                                                <workingDir>/</workingDir>
                                                <entrypoint>
                                                    <arg>/bin/sh</arg>
                                                    <arg>-ex</arg>
                                                    <arg>/jobs/src/main/buildah/build-image-jvm.sh</arg>
                                                </entrypoint>
                                                <wait>
                                                    <time>600000</time>
                                                    <exit>0</exit>
                                                </wait>
                                                <log>
                                                    <prefix>image-builder|</prefix>
                                                    <date>default</date>
                                                </log>
                                                <env>
                                                    <JOBS_IMAGE_NAME>${env.JOBS_IMAGE_NAME}</JOBS_IMAGE_NAME>
                                                    <DOCKER_HOST>${env.DOCKER_HOST}</DOCKER_HOST>
                                                </env>
                                                <volumes>
                                                    <bind>
                                                        <volume>/var/lib/containers</volume>
                                                        <volume>/var/run/docker.sock:/var/run/docker.sock</volume>
                                                    </bind>
                                                </volumes>
                                            </run>
                                        </image>
                                    </images>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>build-image-native</id>
            <properties>
                <docker.removeVolumes>true</docker.removeVolumes>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>${docker-maven-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>build-image</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>stop</goal>
                                    <goal>build</goal>
                                    <goal>start</goal>
                                    <goal>stop</goal>
                                </goals>
                                <configuration>
                                    <containerNamePattern>%a</containerNamePattern>
                                    <images>
                                        <image>
                                            <alias>jobs-native-builder</alias>
                                            <name>jobs-native-builder</name>
                                            <build>
                                                <cleanup>remove</cleanup>
                                                <from>${buildah.image}</from>
                                                <assembly>
                                                    <targetDir>/jobs</targetDir>
                                                    <inline>
                                                        <fileSets>
                                                            <fileSet>
                                                                <directory>${project.basedir}</directory>
                                                                <outputDirectory>/</outputDirectory>
                                                                <excludes>
                                                                    <exclude>target/docker/**</exclude>
                                                                </excludes>
                                                            </fileSet>
                                                        </fileSets>
                                                    </inline>
                                                </assembly>
                                            </build>
                                            <run>
                                                <privileged>true</privileged>
                                                <workingDir>/</workingDir>
                                                <entrypoint>
                                                    <arg>/bin/sh</arg>
                                                    <arg>-ex</arg>
                                                    <arg>/jobs/src/main/buildah/build-image-native.sh</arg>
                                                </entrypoint>
                                                <wait>
                                                    <time>600000</time>
                                                    <exit>0</exit>
                                                </wait>
                                                <log>
                                                    <prefix>image-builder|</prefix>
                                                    <date>default</date>
                                                </log>
                                                <env>
                                                    <JOBS_IMAGE_NAME>${env.JOBS_IMAGE_NAME}</JOBS_IMAGE_NAME>
                                                    <DOCKER_HOST>${env.DOCKER_HOST}</DOCKER_HOST>
                                                </env>
                                                <volumes>
                                                    <bind>
                                                        <volume>/var/lib/containers</volume>
                                                        <volume>/var/run/docker.sock:/var/run/docker.sock</volume>
                                                    </bind>
                                                </volumes>
                                            </run>
                                        </image>
                                    </images>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>kind-load-image-jvm</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>${docker-maven-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>kind-load-image</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>stop</goal>
                                    <goal>start</goal>
                                    <goal>stop</goal>
                                </goals>
                                <configuration>
                                    <containerNamePattern>%a</containerNamePattern>
                                    <images>
                                        <image>
                                            <alias>kind-load</alias>
                                            <name>${it.image}</name>
                                            <run>
                                                <entrypoint>
                                                    <arg>/bin/sh</arg>
                                                    <arg>-exc</arg>
                                                    <arg>
                                                        JOBS_IMAGE_NAME="${JOBS_IMAGE_NAME:-"stackgres/jobs:development-jvm"}"
                                                        CONTAINER_NAME="$(docker inspect -f '{{.Name}}'
                                                        "$(hostname)"|cut -d '/' -f 2|sed 's/^kind-load/kind/')"
                                                        kind load docker-image --name "$CONTAINER_NAME"
                                                        "$JOBS_IMAGE_NAME" || true
                                                    </arg>
                                                </entrypoint>
                                                <wait>
                                                    <time>300000</time>
                                                    <exit>0</exit>
                                                </wait>
                                                <log>
                                                    <prefix>kind-load|</prefix>
                                                    <date>default</date>
                                                </log>
                                                <env>
                                                    <JOBS_IMAGE_NAME>${env.JOBS_IMAGE_NAME}</JOBS_IMAGE_NAME>
                                                    <DOCKER_HOST>${env.DOCKER_HOST}</DOCKER_HOST>
                                                </env>
                                                <volumes>
                                                    <bind>
                                                        <volume>/var/run/docker.sock:/var/run/docker.sock</volume>
                                                        <volume>/var/lib/docker:/var/lib/docker:ro</volume>
                                                    </bind>
                                                </volumes>
                                            </run>
                                        </image>
                                    </images>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>kind-load-image-native</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>${docker-maven-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>kind-load-image</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>stop</goal>
                                    <goal>start</goal>
                                    <goal>stop</goal>
                                </goals>
                                <configuration>
                                    <containerNamePattern>%a</containerNamePattern>
                                    <images>
                                        <image>
                                            <alias>kind-load</alias>
                                            <name>${it.image}</name>
                                            <run>
                                                <entrypoint>
                                                    <arg>/bin/sh</arg>
                                                    <arg>-exc</arg>
                                                    <arg>
                                                        JOBS_IMAGE_NAME="${JOBS_IMAGE_NAME:-"stackgres/jobs:development"}"
                                                        CONTAINER_NAME="$(docker inspect -f '{{.Name}}'
                                                        "$(hostname)"|cut -d '/' -f 2|sed 's/^kind-load/kind/')"
                                                        kind load docker-image --name "$CONTAINER_NAME"
                                                        "$JOBS_IMAGE_NAME" || true
                                                    </arg>
                                                </entrypoint>
                                                <wait>
                                                    <time>300000</time>
                                                    <exit>0</exit>
                                                </wait>
                                                <log>
                                                    <prefix>kind-load|</prefix>
                                                    <date>default</date>
                                                </log>
                                                <env>
                                                    <JOBS_IMAGE_NAME>${env.JOBS_IMAGE_NAME}</JOBS_IMAGE_NAME>
                                                    <DOCKER_HOST>${env.DOCKER_HOST}</DOCKER_HOST>
                                                </env>
                                                <volumes>
                                                    <bind>
                                                        <volume>/var/run/docker.sock:/var/run/docker.sock</volume>
                                                        <volume>/var/lib/docker:/var/lib/docker:ro</volume>
                                                    </bind>
                                                </volumes>
                                            </run>
                                        </image>
                                    </images>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
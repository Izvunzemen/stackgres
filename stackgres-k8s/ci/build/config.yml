modules:
  stackgres:
    type: java
    path: stackgres-k8s/src/.
    target_image: alpine:3.13.5
    build_image: &jdk_build_image docker.io/ongres/ubi-graalvm-maven:21.0.0.2-java11
    sources:
      - stackgres-k8s/src/pom.xml
      - stackgres-k8s/src/checks
      - stackgres-k8s/src/operator-framework/pom.xml
      - stackgres-k8s/src/operator-framework/src
      - stackgres-k8s/src/test-util/pom.xml
      - stackgres-k8s/src/test-util/src
      - stackgres-k8s/src/common/pom.xml
      - stackgres-k8s/src/common/src
      - stackgres-k8s/src/operator/pom.xml
      - stackgres-k8s/src/operator/src
      - stackgres-k8s/src/api-web/pom.xml
      - stackgres-k8s/src/api-web/src
      - stackgres-k8s/src/jobs/pom.xml
      - stackgres-k8s/src/jobs/src
      - stackgres-k8s/src/cluster-controller/pom.xml
      - stackgres-k8s/src/cluster-controller/src
      - stackgres-k8s/src/distributedlogs-controller/pom.xml
      - stackgres-k8s/src/distributedlogs-controller/src
    build_env: &mvn_build_env
      MAVEN_OPTS: |
        -Dhttps.protocols=TLSv1.2
        -Dorg.slf4j.simpleLogger.showDateTime=true
        -Djava.awt.headless=true
        -XX:+UseParallelGC
      MAVEN_CLI_OPTS: |
        --batch-mode
        --errors
        --fail-at-end
        --show-version
        -Dmaven.repo.local=/project/.m2/repository
        -DinstallAtEnd=true
        -DdeployAtEnd=true
        -Dsurefire.useFile=false
        -Dsurefire.useFile=false
        -DtrimStackTrace=false
    build_commands:
      - 'mvn $MAVEN_CLI_OPTS clean install -P safer -f "$MODULE_PATH/pom.xml"'
    post_build_commands:
      - 'microdnf install python3-pip jq'
      - 'pip3 install yamllint yq'
      - 'sh $SHELL_XTRACE stackgres-k8s/src/api-web/src/main/swagger/build.sh'
    cache:
      - stackgres-k8s/src/.mvn
      - .m2/repository
    artifacts:
      - stackgres-k8s/src/target
      - .m2/repository/io/stackgres/stackgres-parent
      - stackgres-k8s/src/operator-framework/target
      - .m2/repository/io/stackgres/stackgres-operator-framework
      - stackgres-k8s/src/test-util/target
      - .m2/repository/io/stackgres/stackgres-test-util
      - stackgres-k8s/src/common/target
      - .m2/repository/io/stackgres/stackgres-common
      - stackgres-k8s/src/operator/target
      - .m2/repository/io/stackgres/stackgres-operator
      - stackgres-k8s/src/api-web/target
      - .m2/repository/io/stackgres/stackgres-restapi
      - stackgres-k8s/src/jobs/target
      - .m2/repository/io/stackgres/stackgres-jobs
      - stackgres-k8s/src/cluster-controller/target
      - .m2/repository/io/stackgres/stackgres-cluster-controller
      - stackgres-k8s/src/distributedlogs-controller/target
      - .m2/repository/io/stackgres/stackgres-distributedlogs-controller
  admin-ui:
    type: web
    path: stackgres-k8s/src/admin-ui
    target_image: alpine:3.13.5
    build_image: node:14.17
    sources:
      - stackgres-k8s/src/admin-ui/babel.config.js
      - stackgres-k8s/src/admin-ui/build.sh
      - stackgres-k8s/src/admin-ui/npmw
      - stackgres-k8s/src/admin-ui/package.json
      - stackgres-k8s/src/admin-ui/vue.config.js
      - stackgres-k8s/src/admin-ui/public
      - stackgres-k8s/src/admin-ui/src
    build_commands:
      - cd stackgres-k8s/src/admin-ui
      - export HOME=/project
      - npm install
      - npm run build
      - sh $SHELL_XTRACE build.sh
    cache:
      - stackgres-k8s/src/admin-ui/node_modules
    artifacts:
      - stackgres-k8s/src/admin-ui/target
  operator-native: &native
    type: native
    name: operator
    path: stackgres-k8s/src/operator
    target_image: alpine:3.13.5
    build_image: *jdk_build_image
    build_env:
      <<: *mvn_build_env
    build_commands:
      - 'mvn $MAVEN_CLI_OPTS package -DskipTests -P native -f "$MODULE_PATH/pom.xml" -N'
    cache:
      - stackgres-k8s/src/.mvn
      - .m2/repository
    artifacts:
      - stackgres-k8s/src/operator/target/stackgres-operator-runner
  restapi-native:
    <<: *native
    name: restapi
    path: stackgres-k8s/src/api-web
    artifacts:
      - stackgres-k8s/src/api-web/target/stackgres-restapi-runner
  jobs-native:
    <<: *native
    name: jobs
    path: stackgres-k8s/src/jobs
    artifacts:
      - stackgres-k8s/src/jobs/target/stackgres-jobs-runner
  cluster-controller-native:
    <<: *native
    name: cluster-controller
    path: stackgres-k8s/src/cluster-controller
    artifacts:
      - stackgres-k8s/src/cluster-controller/target/stackgres-cluster-controller-runner
  distributedlogs-controller-native:
    <<: *native
    name: distributedlogs-controller
    path: stackgres-k8s/src/distributedlogs-controller
    artifacts:
      - stackgres-k8s/src/distributedlogs-controller/target/stackgres-distributedlogs-controller-runner
  operator-jvm-image: &jvm-image
    type: jvm-image
    name: operator
    path: stackgres-k8s/src/operator
    target_image: registry.access.redhat.com/ubi8/openjdk-11:1.3-15
    dockerfile: &jvm-image-args
      path: stackgres-k8s/src/operator/src/main/docker/Dockerfile.jvm
      args:
        BASE_IMAGE: $TARGET_IMAGE_NAME
    artifacts:
      - stackgres-k8s/src/operator/target/stackgres-operator-runner.jar
      - stackgres-k8s/src/operator/src/main/docker/stackgres-operator.jvm.sh
      - stackgres-k8s/src/operator/target/lib
  restapi-jvm-image:
    <<: *jvm-image
    name: restapi
    path: stackgres-k8s/src/api-web
    dockerfile:
      <<: *jvm-image-args
      path: stackgres-k8s/src/api-web/src/main/docker/Dockerfile.jvm
    artifacts:
      - stackgres-k8s/src/api-web/target/stackgres-restapi-runner.jar
      - stackgres-k8s/src/api-web/src/main/docker/stackgres-restapi.jvm.sh
      - stackgres-k8s/src/api-web/target/lib
  jobs-jvm-image:
    <<: *jvm-image
    name: jobs
    path: stackgres-k8s/src/jobs
    dockerfile:
      <<: *jvm-image-args
      path: stackgres-k8s/src/jobs/src/main/docker/Dockerfile.jvm
    artifacts:
      - stackgres-k8s/src/jobs/target/stackgres-jobs-runner.jar
      - stackgres-k8s/src/jobs/src/main/docker/stackgres-jobs.jvm.sh
      - stackgres-k8s/src/jobs/target/lib
  cluster-controller-jvm-image:
    <<: *jvm-image
    name: cluster-controller
    path: stackgres-k8s/src/cluster-controller
    dockerfile:
      <<: *jvm-image-args
      path: stackgres-k8s/src/cluster-controller/src/main/docker/Dockerfile.jvm
    artifacts:
      - stackgres-k8s/src/cluster-controller/target/stackgres-cluster-controller-runner.jar
      - stackgres-k8s/src/cluster-controller/src/main/docker/stackgres-cluster-controller.jvm.sh
      - stackgres-k8s/src/cluster-controller/target/lib
  distributedlogs-controller-jvm-image:
    <<: *jvm-image
    name: distributedlogs-controller
    path: stackgres-k8s/src/distributedlogs-controller
    dockerfile:
      <<: *jvm-image-args
      path: stackgres-k8s/src/distributedlogs-controller/src/main/docker/Dockerfile.jvm
    artifacts:
      - stackgres-k8s/src/distributedlogs-controller/target/stackgres-distributedlogs-controller-runner.jar
      - stackgres-k8s/src/distributedlogs-controller/src/main/docker/stackgres-distributedlogs-controller.jvm.sh
      - stackgres-k8s/src/distributedlogs-controller/target/lib
  admin-ui-image:
    type: image
    path: stackgres-k8s/src/admin-ui
    target_image: registry.access.redhat.com/ubi8/nginx-118:1-42
    dockerfile:
      path: stackgres-k8s/src/admin-ui/docker/Dockerfile
      args:
        BASE_IMAGE: $TARGET_IMAGE_NAME
    artifacts:
      - stackgres-k8s/src/admin-ui/target/public
  operator-native-image: &native-image
    type: native-image
    name: operator
    path: stackgres-k8s/src/operator
    target_image: registry.access.redhat.com/ubi8-minimal:8.4-210
    dockerfile: &native-image-args
      path: stackgres-k8s/src/operator/src/main/docker/Dockerfile.native
      args:
        BASE_IMAGE: $TARGET_IMAGE_NAME
    artifacts:
      - stackgres-k8s/src/operator/target/stackgres-operator-runner
      - stackgres-k8s/src/operator/src/main/docker/stackgres-operator.native.sh
  restapi-native-image:
    <<: *native-image
    name: restapi
    path: stackgres-k8s/src/api-web
    dockerfile:
      <<: *native-image-args
      path: stackgres-k8s/src/api-web/src/main/docker/Dockerfile.native
    artifacts:
      - stackgres-k8s/src/api-web/target/stackgres-restapi-runner
      - stackgres-k8s/src/api-web/src/main/docker/stackgres-restapi.native.sh
  jobs-native-image:
    <<: *native-image
    name: jobs
    path: stackgres-k8s/src/jobs
    dockerfile:
      <<: *native-image-args
      path: stackgres-k8s/src/jobs/src/main/docker/Dockerfile.native
    artifacts:
      - stackgres-k8s/src/jobs/target/stackgres-jobs-runner
      - stackgres-k8s/src/jobs/src/main/docker/stackgres-jobs.native.sh
  cluster-controller-native-image:
    <<: *native-image
    name: cluster-controller
    path: stackgres-k8s/src/cluster-controller
    dockerfile:
      <<: *native-image-args
      path: stackgres-k8s/src/cluster-controller/src/main/docker/Dockerfile.native
    artifacts:
      - stackgres-k8s/src/cluster-controller/target/stackgres-cluster-controller-runner
      - stackgres-k8s/src/cluster-controller/src/main/docker/stackgres-cluster-controller.native.sh
  distributedlogs-controller-native-image:
    <<: *native-image
    name: distributedlogs-controller
    path: stackgres-k8s/src/distributedlogs-controller
    dockerfile:
      <<: *native-image-args
      path: stackgres-k8s/src/distributedlogs-controller/src/main/docker/Dockerfile.native
    artifacts:
      - stackgres-k8s/src/distributedlogs-controller/target/stackgres-distributedlogs-controller-runner
      - stackgres-k8s/src/distributedlogs-controller/src/main/docker/stackgres-distributedlogs-controller.native.sh
  helm-packages:
    type: resource
    target_image: alpine:3.13.5
    sources:
      - stackgres-k8s/install/helm/stackgres-operator
      - stackgres-k8s/install/helm/stackgres-cluster
      - stackgres-k8s/install/helm/build-helm-packages.sh
    build_image: dtzar/helm-kubectl:3.3.1
    build_commands:
      - export HOME=/project
      - sh $SHELL_XTRACE stackgres-k8s/install/helm/build-helm-packages.sh
    artifacts:
      - stackgres-k8s/install/helm/target/packages
  helm-templates:
    type: resource
    target_image: alpine:3.13.5
    sources:
      - stackgres-k8s/install/helm/stackgres-operator
      - stackgres-k8s/install/helm/stackgres-cluster
      - stackgres-k8s/install/helm/build-helm-templates.sh
    build_image: dtzar/helm-kubectl:3.3.1
    build_commands:
      - export HOME=/project
      - sh $SHELL_XTRACE stackgres-k8s/install/helm/build-helm-templates.sh
    artifacts:
      - stackgres-k8s/install/helm/target/templates
stages:
  - stackgres: null
  - admin-ui: stackgres
  - operator-jvm-image: stackgres
  - restapi-jvm-image: stackgres
  - jobs-jvm-image: stackgres
  - cluster-controller-jvm-image: stackgres
  - distributedlogs-controller-jvm-image: stackgres
  - admin-ui-image: admin-ui
  - operator-native: stackgres
  - restapi-native: stackgres
  - jobs-native: stackgres
  - cluster-controller-native: stackgres
  - distributedlogs-controller-native: stackgres
  - operator-native-image: operator-native
  - restapi-native-image: restapi-native
  - jobs-native-image: jobs-native
  - cluster-controller-native-image: cluster-controller-native
  - distributedlogs-controller-native-image: distributedlogs-controller-native
  - helm-packages: null
  - helm-templates: null

platforms:
  - linux-x86_64
  - linux-aarch64
modules:
  stackgres-parent: &stackgres-parent
    type: java
    path: stackgres-k8s/src/.
    target_image: alpine:3.13.10
    build_image: &jdk_build_image registry.gitlab.com/ongresinc/stackgres/builder:1.4
    sources:
      - stackgres-k8s/src/pom.xml
      - stackgres-k8s/src/checks
    build_env: &mvn_build_env
      MAVEN_OPTS: |
        -Dhttps.protocols=TLSv1.2
        -Dorg.slf4j.simpleLogger.showDateTime=true
        -Djava.awt.headless=true
        -XX:+UseParallelGC
      MAVEN_CLI_OPTS: |
        --batch-mode
        --errors
        --show-version
        -Dmaven.repo.local=/project/.m2/repository
        -Dmaven.user.home=/project/.m2
        -DinstallAtEnd=true
        -DdeployAtEnd=true
        -Dsurefire.useFile=false
        -DtrimStackTrace=false
    build_commands:
      - 'stackgres-k8s/src/mvnw $MAVEN_CLI_OPTS clean install -P safer -f "$MODULE_PATH/pom.xml" -N'
    cache:
      - .m2/
    artifacts:
      - stackgres-k8s/src/target
      - .m2/repository/io/stackgres/stackgres-parent
  stackgres-operator-framework: &stackgres-operator-framework
    <<: *stackgres-parent
    path: stackgres-k8s/src/operator-framework/.
    target_image: null
    sources:
      - stackgres-k8s/src/operator-framework/pom.xml
      - stackgres-k8s/src/operator-framework/src/main
    artifacts:
      - stackgres-k8s/src/operator-framework/target
      - .m2/repository/io/stackgres/stackgres-operator-framework
  stackgres-test-util:
    <<: *stackgres-operator-framework
    path: stackgres-k8s/src/test-util/.
    sources:
      - stackgres-k8s/src/test-util/pom.xml
      - stackgres-k8s/src/test-util/src/main
    artifacts:
      - stackgres-k8s/src/test-util/target
      - .m2/repository/io/stackgres/stackgres-test-util
  stackgres-common:
    <<: *stackgres-operator-framework
    path: stackgres-k8s/src/common/.
    sources:
      - stackgres-k8s/src/common/pom.xml
      - stackgres-k8s/src/common/src/main
    artifacts:
      - stackgres-k8s/src/common/target
      - .m2/repository/io/stackgres/stackgres-common
  stackgres-operator:
    <<: *stackgres-operator-framework
    path: stackgres-k8s/src/operator/.
    sources:
      - stackgres-k8s/src/operator/pom.xml
      - stackgres-k8s/src/operator/src/main
    artifacts:
      - stackgres-k8s/src/operator/target
      - .m2/repository/io/stackgres/stackgres-operator
  stackgres-restapi:
    <<: *stackgres-operator-framework
    path: stackgres-k8s/src/api-web/.
    sources:
      - stackgres-k8s/src/api-web/pom.xml
      - stackgres-k8s/src/api-web/src/main
    post_build_commands:
      - 'sh $SHELL_XTRACE stackgres-k8s/src/api-web/src/main/swagger/build.sh'
    artifacts:
      - stackgres-k8s/src/api-web/target
      - .m2/repository/io/stackgres/stackgres-restapi
  stackgres-jobs:
    <<: *stackgres-operator-framework
    path: stackgres-k8s/src/jobs/.
    sources:
      - stackgres-k8s/src/jobs/pom.xml
      - stackgres-k8s/src/jobs/src/main
    artifacts:
      - stackgres-k8s/src/jobs/target
      - .m2/repository/io/stackgres/stackgres-jobs
  stackgres-cluster-controller:
    <<: *stackgres-operator-framework
    path: stackgres-k8s/src/cluster-controller/.
    sources:
      - stackgres-k8s/src/cluster-controller/pom.xml
      - stackgres-k8s/src/cluster-controller/src/main
    artifacts:
      - stackgres-k8s/src/cluster-controller/target
      - .m2/repository/io/stackgres/stackgres-cluster-controller
  stackgres-distributedlogs-controller:
    <<: *stackgres-operator-framework
    path: stackgres-k8s/src/distributedlogs-controller/.
    sources:
      - stackgres-k8s/src/distributedlogs-controller/pom.xml
      - stackgres-k8s/src/distributedlogs-controller/src/main
    artifacts:
      - stackgres-k8s/src/distributedlogs-controller/target
      - .m2/repository/io/stackgres/stackgres-distributedlogs-controller
  admin-ui:
    type: ui
    path: stackgres-k8s/src/admin-ui
    target_image: alpine:3.13.10
    build_image: node:14.19
    sources:
      - stackgres-k8s/src/admin-ui/babel.config.js
      - stackgres-k8s/src/admin-ui/build.sh
      - stackgres-k8s/src/admin-ui/npmw
      - stackgres-k8s/src/admin-ui/package.json
      - stackgres-k8s/src/admin-ui/vue.config.js
      - stackgres-k8s/src/admin-ui/public
      - stackgres-k8s/src/admin-ui/src
    build_commands:
      - cd stackgres-k8s/src/admin-ui
      - export HOME=/project
      - npm install
      - |
        ! grep -q 'later-cov' node_modules/prettycron/node_modules/later/index.js \
          || sed -i 's/^require\(.*\);$/require(".\/later");/' node_modules/prettycron/node_modules/later/index.js
      - npm run build
      - sh $SHELL_XTRACE build.sh
    cache:
      - stackgres-k8s/src/admin-ui/node_modules
    artifacts:
      - stackgres-k8s/src/admin-ui/target
  operator-native: &native
    type: native
    platform_dependent: true
    path: stackgres-k8s/src/operator
    target_image: alpine:3.13.10
    build_image: *jdk_build_image
    build_env:
      <<: *mvn_build_env
    build_commands:
      - 'stackgres-k8s/src/mvnw $MAVEN_CLI_OPTS package -DskipTests -P native -f "$MODULE_PATH/pom.xml" -N'
    cache:
      - .m2/
    artifacts:
      - stackgres-k8s/src/operator/target/stackgres-operator-runner
  restapi-native:
    <<: *native
    path: stackgres-k8s/src/api-web
    artifacts:
      - stackgres-k8s/src/api-web/target/stackgres-restapi-runner
  jobs-native:
    <<: *native
    path: stackgres-k8s/src/jobs
    artifacts:
      - stackgres-k8s/src/jobs/target/stackgres-jobs-runner
  cluster-controller-native:
    <<: *native
    path: stackgres-k8s/src/cluster-controller
    artifacts:
      - stackgres-k8s/src/cluster-controller/target/stackgres-cluster-controller-runner
  distributedlogs-controller-native:
    <<: *native
    path: stackgres-k8s/src/distributedlogs-controller
    artifacts:
      - stackgres-k8s/src/distributedlogs-controller/target/stackgres-distributedlogs-controller-runner
  operator-jvm-image: &jvm-image
    type: jvm-image
    platform_dependent: true
    path: stackgres-k8s/src/operator
    target_image: registry.access.redhat.com/ubi8/openjdk-17:1.14-4.1666624568
    dockerfile: &jvm-image-args
      path: stackgres-k8s/src/operator/src/main/docker/Dockerfile.jvm
      args:
        BASE_IMAGE: $TARGET_IMAGE_NAME
      seds:
        - "s#^\\( *COPY\\) \\+'#\\1 './$MODULE_PATH/#"
    artifacts:
      - stackgres-k8s/src/operator/src/main/docker/LICENCE
      - stackgres-k8s/src/operator/src/main/docker/stackgres-operator.jvm.sh
      - stackgres-k8s/src/operator/target/quarkus-app
  restapi-jvm-image:
    <<: *jvm-image
    path: stackgres-k8s/src/api-web
    dockerfile:
      <<: *jvm-image-args
      path: stackgres-k8s/src/api-web/src/main/docker/Dockerfile.jvm
    artifacts:
      - stackgres-k8s/src/api-web/src/main/docker/LICENCE
      - stackgres-k8s/src/api-web/src/main/docker/stackgres-restapi.jvm.sh
      - stackgres-k8s/src/api-web/target/quarkus-app
  jobs-jvm-image:
    <<: *jvm-image
    path: stackgres-k8s/src/jobs
    dockerfile:
      <<: *jvm-image-args
      path: stackgres-k8s/src/jobs/src/main/docker/Dockerfile.jvm
    artifacts:
      - stackgres-k8s/src/jobs/src/main/docker/LICENCE
      - stackgres-k8s/src/jobs/src/main/docker/stackgres-jobs.jvm.sh
      - stackgres-k8s/src/jobs/target/quarkus-app
  cluster-controller-jvm-image:
    <<: *jvm-image
    path: stackgres-k8s/src/cluster-controller
    dockerfile:
      <<: *jvm-image-args
      path: stackgres-k8s/src/cluster-controller/src/main/docker/Dockerfile.jvm
    artifacts:
      - stackgres-k8s/src/cluster-controller/src/main/docker/LICENCE
      - stackgres-k8s/src/cluster-controller/src/main/docker/stackgres-cluster-controller.jvm.sh
      - stackgres-k8s/src/cluster-controller/target/quarkus-app
  distributedlogs-controller-jvm-image:
    <<: *jvm-image
    path: stackgres-k8s/src/distributedlogs-controller
    dockerfile:
      <<: *jvm-image-args
      path: stackgres-k8s/src/distributedlogs-controller/src/main/docker/Dockerfile.jvm
    artifacts:
      - stackgres-k8s/src/distributedlogs-controller/src/main/docker/LICENCE
      - stackgres-k8s/src/distributedlogs-controller/src/main/docker/stackgres-distributedlogs-controller.jvm.sh
      - stackgres-k8s/src/distributedlogs-controller/target/quarkus-app
  admin-ui-image:
    type: ui-image
    platform_dependent: true
    path: stackgres-k8s/src/admin-ui
    target_image: registry.access.redhat.com/ubi8/nginx-120:1-74
    dockerfile:
      path: stackgres-k8s/src/admin-ui/docker/Dockerfile
      args:
        BASE_IMAGE: $TARGET_IMAGE_NAME
      seds:
        - "s#^\\( *COPY\\) \\+'#\\1 './$MODULE_PATH/#"
    artifacts:
      - stackgres-k8s/src/admin-ui/docker/LICENCE
      - stackgres-k8s/src/admin-ui/target/public
  operator-native-image: &native-image
    type: native-image
    platform_dependent: true
    path: stackgres-k8s/src/operator
    target_image: registry.access.redhat.com/ubi8-minimal:8.7-923
    dockerfile: &native-image-args
      path: stackgres-k8s/src/operator/src/main/docker/Dockerfile.native
      args:
        BASE_IMAGE: $TARGET_IMAGE_NAME
      seds:
        - "s#^\\( *COPY\\) \\+'#\\1 './$MODULE_PATH/#"
    artifacts:
      - stackgres-k8s/src/operator/src/main/docker/LICENCE
      - stackgres-k8s/src/operator/target/stackgres-operator-runner
      - stackgres-k8s/src/operator/src/main/docker/stackgres-operator.native.sh
  restapi-native-image:
    <<: *native-image
    path: stackgres-k8s/src/api-web
    dockerfile:
      <<: *native-image-args
      path: stackgres-k8s/src/api-web/src/main/docker/Dockerfile.native
    artifacts:
      - stackgres-k8s/src/api-web/src/main/docker/LICENCE
      - stackgres-k8s/src/api-web/target/stackgres-restapi-runner
      - stackgres-k8s/src/api-web/src/main/docker/stackgres-restapi.native.sh
  jobs-native-image:
    <<: *native-image
    path: stackgres-k8s/src/jobs
    dockerfile:
      <<: *native-image-args
      path: stackgres-k8s/src/jobs/src/main/docker/Dockerfile.native
    artifacts:
      - stackgres-k8s/src/jobs/src/main/docker/LICENCE
      - stackgres-k8s/src/jobs/target/stackgres-jobs-runner
      - stackgres-k8s/src/jobs/src/main/docker/stackgres-jobs.native.sh
  cluster-controller-native-image:
    <<: *native-image
    path: stackgres-k8s/src/cluster-controller
    dockerfile:
      <<: *native-image-args
      path: stackgres-k8s/src/cluster-controller/src/main/docker/Dockerfile.native
    artifacts:
      - stackgres-k8s/src/cluster-controller/src/main/docker/LICENCE
      - stackgres-k8s/src/cluster-controller/target/stackgres-cluster-controller-runner
      - stackgres-k8s/src/cluster-controller/src/main/docker/stackgres-cluster-controller.native.sh
  distributedlogs-controller-native-image:
    <<: *native-image
    path: stackgres-k8s/src/distributedlogs-controller
    dockerfile:
      <<: *native-image-args
      path: stackgres-k8s/src/distributedlogs-controller/src/main/docker/Dockerfile.native
    artifacts:
      - stackgres-k8s/src/distributedlogs-controller/src/main/docker/LICENCE
      - stackgres-k8s/src/distributedlogs-controller/target/stackgres-distributedlogs-controller-runner
      - stackgres-k8s/src/distributedlogs-controller/src/main/docker/stackgres-distributedlogs-controller.native.sh
  helm-packages:
    type: helm
    target_image: alpine:3.13.10
    sources:
      - stackgres-k8s/install/helm/stackgres-operator
      - stackgres-k8s/install/helm/stackgres-cluster
      - stackgres-k8s/install/helm/build-helm-packages.sh
      - stackgres-k8s/src/pom.xml
    build_image: registry.gitlab.com/ongresinc/stackgres/ci:1.15
    build_commands:
      - export HOME=/project
      - sh $SHELL_XTRACE stackgres-k8s/install/helm/build-helm-packages.sh
    artifacts:
      - stackgres-k8s/install/helm/target/packages
  helm-templates:
    type: helm
    target_image: alpine:3.13.10
    sources:
      - stackgres-k8s/install/helm/stackgres-operator
      - stackgres-k8s/install/helm/stackgres-cluster
      - stackgres-k8s/install/helm/build-helm-templates.sh
      - stackgres-k8s/src/pom.xml
    build_image: registry.gitlab.com/ongresinc/stackgres/ci:1.15
    build_commands:
      - export HOME=/project
      - sh $SHELL_XTRACE stackgres-k8s/install/helm/build-helm-templates.sh
    artifacts:
      - stackgres-k8s/install/helm/target/templates
  documentation:
    type: documentation
    target_image: alpine:3.13.10
    sources:
      - doc/build.sh
      - doc/config.toml
      - doc/content
      - doc/data/descriptions
      - doc/demo
      - doc/LICENSE.md
      - doc/themes
      - stackgres-k8s/src/pom.xml
      - stackgres-k8s/src/common/src/main/resources/crds
    build_image: klakegg/hugo:0.81.0-ubuntu
    build_env:
      DOCUMENTATION_BASE_URL: '$DOCUMENTATION_BASE_URL'
      DOCUMENTATION_EXTRA_PATH: '$DOCUMENTATION_EXTRA_PATH'
    build_commands:
      - sh -x doc/build.sh
      - |
        STACKGRES_VERSION="$(
          grep '<artifactId>stackgres-parent</artifactId>' "stackgres-k8s/src/pom.xml" -A 2 -B 2 \
            | sed -n 's/^.*<version>\([^<]\+\)<\/version>.*$/\1/p')"
        STACKGRES_DOC_VERSION="$(
          printf "%s" "$STACKGRES_VERSION" | cut -d . -f 1-2)$(printf "%s" "$STACKGRES_VERSION" \
            | grep -q ".-SNAPSHOT$" && printf "%s" "-dev" || true)"
      - mkdir -p "doc/public/$DOCUMENTATION_EXTRA_PATH$STACKGRES_VERSION"
      - hugo -v --source doc --destination "$(pwd)/doc/public/$DOCUMENTATION_EXTRA_PATH$STACKGRES_DOC_VERSION" --baseURL="$DOCUMENTATION_BASE_URL/$DOCUMENTATION_EXTRA_PATH$STACKGRES_DOC_VERSION"
    artifacts:
      - doc/public
stages:
  - stackgres-parent: null
  - stackgres-operator-framework: stackgres-parent
  - stackgres-test-util: stackgres-operator-framework
  - stackgres-common: stackgres-test-util
  - stackgres-operator: stackgres-common
  - stackgres-restapi: stackgres-common
  - stackgres-jobs: stackgres-common
  - stackgres-cluster-controller: stackgres-common
  - stackgres-distributedlogs-controller: stackgres-common
  - admin-ui: stackgres-restapi
  - operator-jvm-image: stackgres-operator
  - restapi-jvm-image: stackgres-restapi
  - jobs-jvm-image: stackgres-jobs
  - cluster-controller-jvm-image: stackgres-cluster-controller
  - distributedlogs-controller-jvm-image: stackgres-distributedlogs-controller
  - admin-ui-image: admin-ui
  - operator-native: stackgres-operator
  - restapi-native: stackgres-restapi
  - jobs-native: stackgres-jobs
  - cluster-controller-native: stackgres-cluster-controller
  - distributedlogs-controller-native: stackgres-distributedlogs-controller
  - operator-native-image: operator-native
  - restapi-native-image: restapi-native
  - jobs-native-image: jobs-native
  - cluster-controller-native-image: cluster-controller-native
  - distributedlogs-controller-native-image: distributedlogs-controller-native
  - helm-packages: null
  - helm-templates: null
  - documentation: stackgres-restapi

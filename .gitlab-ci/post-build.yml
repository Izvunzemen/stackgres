build ui:
  image: node:14-buster
  stage: post-build
  cache: {}
  tags:
    - stackgres-runner
  needs:
    - job: build
  script:
  - cd stackgres-k8s/src/admin-ui
  - npm install
  - npm run build
  - sh -x build.sh
  artifacts:
    expire_in: 1 week
    when: always
    paths:
    - stackgres-k8s/src/admin-ui/target
  rules:
    - if: '$DOCS_ONLY'
      when: never
    - when: on_success

build helm packages:
  image: dtzar/helm-kubectl:3.5.4
  stage: post-build
  tags:
    - stackgres-runner
  script:
  - sh -x stackgres-k8s/install/helm/build-helm-packages.sh
  - |
    if [ "$DEPLOY_LATEST" == "true" ] && [ "$SG_CURRENT_VERSION" = "$SG_MAJOR_MINOR_VERSION" ]; then
      cp -a "stackgres-k8s/install/helm/target/public/downloads/stackgres-k8s/stackgres"/* stackgres-k8s/install/helm/target/public/downloads/stackgres-k8s/stackgres/current
    fi
  - find stackgres-k8s/install/helm/target/public | sed -e "s/[^-][^\/]*\// |/g" -e "s/|\([^ ]\)/|-\1/"
  artifacts:
    expire_in: 1 week
    when: always
    paths:
    - stackgres-k8s/install/helm/target
  rules:
    - if: '$DOCS_ONLY'
      when: never
    - if: '$CI_COMMIT_TAG && $CI_COMMIT_TAG !~ /^latest-.*$/'
      variables:
        DEPLOY_LATEST: "true"
    - when: on_success

build helm templates:
  image: dtzar/helm-kubectl:3.5.4
  stage: post-build
  tags:
    - stackgres-runner
  script:
  - sh -x stackgres-k8s/install/helm/build-helm-templates.sh
  - |
    if [ "$DEPLOY_LATEST" == "true" ] && [ "$SG_CURRENT_VERSION" = "$SG_MAJOR_MINOR_VERSION" ]; then
      cp -a "stackgres-k8s/install/helm/target/public/downloads/stackgres-k8s/stackgres"/* stackgres-k8s/install/helm/target/public/downloads/stackgres-k8s/stackgres/current
    fi
  - find stackgres-k8s/install/helm/target/public | sed -e "s/[^-][^\/]*\// |/g" -e "s/|\([^ ]\)/|-\1/"
  artifacts:
    expire_in: 1 week
    when: always
    paths:
    - stackgres-k8s/install/helm/target
  rules:
    - if: '$DOCS_ONLY'
      when: never
    - if: '$CI_COMMIT_TAG && $CI_COMMIT_TAG !~ /^latest-.*$/'
      variables:
        DEPLOY_LATEST: "true"
    - when: on_success

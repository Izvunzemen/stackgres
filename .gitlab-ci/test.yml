unit tests:
  image: docker.io/ongres/ubi-graalvm-maven:21.0.0.2-java11
  stage: test
  variables:
    # skipped due to but in quarkus junit extension initialization
    # QUARKUS_PROFILE: "test"
  tags:
    - stackgres-runner
    - stackgres-quarkus-test-runner
    - stackgres-maven-runner
  script:
    - 'mvn $MAVEN_CLI_OPTS clean verify'
  retry:
    max: 2
    when: [ unknown_failure, api_failure, stuck_or_timeout_failure, runner_system_failure, runner_unsupported,
     stale_schedule, job_execution_timeout, archived_failure, unmet_prerequisites, scheduler_failure, data_integrity_failure ] 
  artifacts:
    expire_in: 1 week
    when: always
    reports:
      junit:
        - stackgres-k8s/src/*/target/surefire-reports/TEST-*.xml

shell unit tests:
  image: registry.gitlab.com/$CI_PROJECT_PATH/stackgres/it:14.0
  stage: test
  tags:
    - stackgres-runner
  script:
    - |
      set +e
      TMP_PATH="/tmp/stackgres-$JOB_ID"
      cp -a . "$TMP_PATH"
      (
        cd "$TMP_PATH"
        sh stackgres-k8s/src/operator/src/test/shell/run-in-docker.sh
      )
      EXIT_CODE="$?"
      cp -a "$TMP_PATH"/stackgres-k8s/src/operator/target stackgres-k8s/src/operator/target
      rm -rf "$TMP_PATH"
      exit "$EXIT_CODE"
  retry:
    max: 2
    when: [ unknown_failure, api_failure, stuck_or_timeout_failure, runner_system_failure, runner_unsupported,
     stale_schedule, job_execution_timeout, archived_failure, unmet_prerequisites, scheduler_failure, data_integrity_failure ] 
  artifacts:
    expire_in: 1 week
    when: always
    paths:
    - stackgres-k8s/src/operator/target/shell
    reports:
      junit:
        - stackgres-k8s/src/operator/target/shell/shell-unit-tests-junit-report-*.xml

swagger validations:
  image: registry.gitlab.com/$CI_PROJECT_PATH/stackgres/it:14.0
  stage: test
  tags:
    - stackgres-runner
  script:
    - |
      yajsv -s stackgres-k8s/src/api-web/src/main/swagger/schema.json stackgres-k8s/src/api-web/target/swagger-merged.json
  retry:
    max: 2
    when: [ unknown_failure, api_failure, stuck_or_timeout_failure, runner_system_failure, runner_unsupported,
     stale_schedule, job_execution_timeout, archived_failure, unmet_prerequisites, scheduler_failure, data_integrity_failure ] 
  dependencies:
    - build
  artifacts:
    expire_in: 1 week
    when: always

.e2e tests:
  stage: test
  image: registry.gitlab.com/$CI_PROJECT_PATH/stackgres/it:14.0
  tags:
    - stackgres-runner
  dependencies:
    - build helm packages
    - build helm templates
  variables:
    IMAGE_TAG_SUFFIX: ""
    E2E_SUFFIX: ""
  timeout: 12 hour
  script:
    - |
      if ! (test "$E2E_JOBS" -ge 1 && test "$E2E_JOBS" -le 6)
      then
        echo "E2E_JOBS must be between 1 and 6 (was $E2E_JOBS)"
        exit 1
      fi
      if ! (test "$E2E_EXCLUSIVE_JOBS" -ge 1 && test "$E2E_EXCLUSIVE_JOBS" -le 6)
      then
        echo "E2E_EXCLUSIVE_JOBS must be between 1 and 6 (was $E2E_EXCLUSIVE_JOBS)"
        exit 1
      fi
      SHELL_XTRACE="$([ "$E2E_DEBUG" = true ] && echo "-x" || echo "")"
    - sh $SHELL_XTRACE stackgres-k8s/ci/test/e2e-run-all-tests-gitlab.sh
  retry:
    max: 2
    when: [ unknown_failure, api_failure, stuck_or_timeout_failure, runner_system_failure, runner_unsupported,
     stale_schedule, job_execution_timeout, archived_failure, unmet_prerequisites, scheduler_failure, data_integrity_failure ] 
  artifacts:
    expire_in: 1 week
    when: always
    paths:
    - stackgres-k8s/e2e/target
    reports:
      junit:
        - stackgres-k8s/e2e/target/e2e-tests-junit-report.xml

.e2e tests jvm image:
  extends: .e2e tests
  variables:
    E2E_SUFFIX: "jvm-image"
    IMAGE_TAG_SUFFIX: "-jvm"
  only:
    variables:
      - $SKIP_E2E != "true"
  artifacts:
    expire_in: 1 week
    when: always
    paths:
    - stackgres-k8s/e2e/target

e2e tests jvm image part 1:
  extends: .e2e tests jvm image
  variables:
    E2E_RUN_ONLY: non_exclusive:1/$E2E_JOBS

e2e tests jvm image part 2:
  extends: .e2e tests jvm image
  variables:
    E2E_RUN_ONLY: non_exclusive:2/$E2E_JOBS
  except:
    variables:
      - $E2E_TEST
      - $E2E_JOBS =~ /^[1]$/

e2e tests jvm image part 3:
  extends: .e2e tests jvm image
  variables:
    E2E_RUN_ONLY: non_exclusive:3/$E2E_JOBS
  except:
    variables:
      - $E2E_TEST
      - $E2E_JOBS =~ /^[12]$/

e2e tests jvm image part 4:
  extends: .e2e tests jvm image
  variables:
    E2E_RUN_ONLY: non_exclusive:4/$E2E_JOBS
  except:
    variables:
      - $E2E_TEST
      - $E2E_JOBS =~ /^[123]$/

e2e tests jvm image part 5:
  extends: .e2e tests jvm image
  variables:
    E2E_RUN_ONLY: non_exclusive:5/$E2E_JOBS
  except:
    variables:
      - $E2E_TEST
      - $E2E_JOBS =~ /^[1234]$/

e2e tests jvm image part 6:
  extends: .e2e tests jvm image
  variables:
    E2E_RUN_ONLY: non_exclusive:6/$E2E_JOBS
  except:
    variables:
      - $E2E_TEST
      - $E2E_JOBS =~ /^[12345]$/

e2e exclusive tests jvm image part 1:
  extends: .e2e tests jvm image
  variables:
    E2E_RUN_ONLY: exclusive:1/$E2E_EXCLUSIVE_JOBS
    E2E_SKIP_OPERATOR_INSTALL: "true"
  except:
    variables:
      - $E2E_TEST

e2e exclusive tests jvm image part 2:
  extends: .e2e tests jvm image
  variables:
    E2E_RUN_ONLY: exclusive:2/$E2E_EXCLUSIVE_JOBS
    E2E_SKIP_OPERATOR_INSTALL: "true"
  except:
    variables:
      - $E2E_TEST
      - $E2E_EXCLUSIVE_JOBS =~ /^[1]$/

e2e exclusive tests jvm image part 3:
  extends: .e2e tests jvm image
  variables:
    E2E_RUN_ONLY: exclusive:3/$E2E_EXCLUSIVE_JOBS
    E2E_SKIP_OPERATOR_INSTALL: "true"
  except:
    variables:
      - $E2E_TEST
      - $E2E_EXCLUSIVE_JOBS =~ /^[12]$/

e2e exclusive tests jvm image part 4:
  extends: .e2e tests jvm image
  variables:
    E2E_RUN_ONLY: exclusive:4/$E2E_EXCLUSIVE_JOBS
    E2E_SKIP_OPERATOR_INSTALL: "true"
  except:
    variables:
      - $E2E_TEST
      - $E2E_EXCLUSIVE_JOBS =~ /^[123]$/

e2e exclusive tests jvm image part 5:
  extends: .e2e tests jvm image
  variables:
    E2E_RUN_ONLY: exclusive:5/$E2E_EXCLUSIVE_JOBS
    E2E_SKIP_OPERATOR_INSTALL: "true"
  except:
    variables:
      - $E2E_TEST
      - $E2E_EXCLUSIVE_JOBS =~ /^[1234]$/

e2e exclusive tests jvm image part 6:
  extends: .e2e tests jvm image
  variables:
    E2E_RUN_ONLY: exclusive:6/$E2E_EXCLUSIVE_JOBS
    E2E_SKIP_OPERATOR_INSTALL: "true"
  except:
    variables:
      - $E2E_TEST
      - $E2E_EXCLUSIVE_JOBS =~ /^[12345]$/

.e2e tests native image:
  extends: .e2e tests
  variables:
    E2E_SUFFIX: "native-image"
    IMAGE_TAG_SUFFIX: ""
  only:
    variables:
      - $SKIP_E2E != "true" && $SKIP_NATIVE != "true" && $CI_COMMIT_REF_NAME =~ /^main.*$/
      - $SKIP_E2E != "true" && $SKIP_NATIVE != "true" && $CI_COMMIT_REF_NAME == "current"
      - $SKIP_E2E != "true" && $SKIP_NATIVE != "true" && $CI_COMMIT_TAG && $CI_COMMIT_TAG !~ /^latest-.*$/
      - $DO_DEPLOY
      - $DO_NATIVE
  artifacts:
    expire_in: 1 week
    when: always
    paths:
    - stackgres-k8s/e2e/target

e2e tests native image part 1:
  extends: .e2e tests native image
  variables:
    E2E_RUN_ONLY: non_exclusive:1/$E2E_JOBS

e2e tests native image part 2:
  extends: .e2e tests native image
  variables:
    E2E_RUN_ONLY: non_exclusive:2/$E2E_JOBS
  except:
    variables:
      - $E2E_TEST
      - $E2E_JOBS =~ /^[1]$/

e2e tests native image part 3:
  extends: .e2e tests native image
  variables:
    E2E_RUN_ONLY: non_exclusive:3/$E2E_JOBS
  except:
    variables:
      - $E2E_TEST
      - $E2E_JOBS =~ /^[12]$/

e2e tests native image part 4:
  extends: .e2e tests native image
  variables:
    E2E_RUN_ONLY: non_exclusive:4/$E2E_JOBS
  except:
    variables:
      - $E2E_TEST
      - $E2E_JOBS =~ /^[123]$/

e2e tests native image part 5:
  extends: .e2e tests native image
  variables:
    E2E_RUN_ONLY: non_exclusive:5/$E2E_JOBS
  except:
    variables:
      - $E2E_TEST
      - $E2E_JOBS =~ /^[1234]$/

e2e tests native image part 6:
  extends: .e2e tests native image
  variables:
    E2E_RUN_ONLY: non_exclusive:6/$E2E_JOBS
  except:
    variables:
      - $E2E_TEST
      - $E2E_JOBS =~ /^[12345]$/

e2e exclusive tests native image part 1:
  extends: .e2e tests native image
  variables:
    E2E_RUN_ONLY: exclusive:1/$E2E_EXCLUSIVE_JOBS
    E2E_SKIP_OPERATOR_INSTALL: "true"
  except:
    variables:
      - $E2E_TEST

e2e exclusive tests native image part 2:
  extends: .e2e tests native image
  variables:
    E2E_RUN_ONLY: exclusive:2/$E2E_EXCLUSIVE_JOBS
    E2E_SKIP_OPERATOR_INSTALL: "true"
  except:
    variables:
      - $E2E_TEST
      - $E2E_EXCLUSIVE_JOBS =~ /^[1]$/

e2e exclusive tests native image part 3:
  extends: .e2e tests native image
  variables:
    E2E_RUN_ONLY: exclusive:3/$E2E_EXCLUSIVE_JOBS
    E2E_SKIP_OPERATOR_INSTALL: "true"
  except:
    variables:
      - $E2E_TEST
      - $E2E_EXCLUSIVE_JOBS =~ /^[12]$/

e2e exclusive tests native image part 4:
  extends: .e2e tests native image
  variables:
    E2E_RUN_ONLY: exclusive:4/$E2E_EXCLUSIVE_JOBS
    E2E_SKIP_OPERATOR_INSTALL: "true"
  except:
    variables:
      - $E2E_TEST
      - $E2E_EXCLUSIVE_JOBS =~ /^[123]$/

e2e exclusive tests native image part 5:
  extends: .e2e tests native image
  variables:
    E2E_RUN_ONLY: exclusive:5/$E2E_EXCLUSIVE_JOBS
    E2E_SKIP_OPERATOR_INSTALL: "true"
  except:
    variables:
      - $E2E_TEST
      - $E2E_EXCLUSIVE_JOBS =~ /^[1234]$/

e2e exclusive tests native image part 6:
  extends: .e2e tests native image
  variables:
    E2E_RUN_ONLY: exclusive:6/$E2E_EXCLUSIVE_JOBS
    E2E_SKIP_OPERATOR_INSTALL: "true"
  except:
    variables:
      - $E2E_TEST
      - $E2E_EXCLUSIVE_JOBS =~ /^[12345]$/


.build image:
  image: docker:20.10.6
  stage: image build
  dependencies:
    - build
  timeout: 1 hour
  script:
    - 'export IMAGE_TAG="${CI_COMMIT_TAG:-"$CI_COMMIT_SHORT_SHA"}$IMAGE_SUFFIX"'
    - 'export IMAGE_NAME="$CI_REGISTRY/$CI_PROJECT_PATH/$IMAGE_BASE_NAME:$IMAGE_TAG"'
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
    - 'eval "export $IMAGE_NAME_ENV_VAR=$IMAGE_NAME"'
    - cd "stackgres-k8s/src"
    - |
      flock "/tmp/$LOCK_FILE" \
        sh -xe "$BUILD_FILE"
    - docker push "$IMAGE_NAME"
  retry: 2

.build test image:
  image: docker:20.10.6
  stage: image build
  timeout: 1 hour
  script:
    - |
      IT_IMAGE_NAME="$(grep -o '<it\.image>\([^<]\+\)</it\.image>' stackgres-k8s/src/pom.xml \
        | tr '<>' '  ' | cut -d ' ' -f 3)$IMAGE_SUFFIX"
    - TARGET_IT_IMAGE_NAME="$CI_REGISTRY/$CI_PROJECT_PATH/$IT_IMAGE_NAME"
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
    - |
      if docker manifest inspect "$TARGET_IT_IMAGE_NAME" 2>/dev/null
      then
        echo "$TARGET_IT_IMAGE_NAME" already exists
        exit
      fi
      echo Building...
      if [ "$IMAGE_SUFFIX" = arm64 ]
      then
        docker build -f stackgres-k8s/src/operator/src/test/docker/Dockerfile.it.arm64 -t "$TARGET_IT_IMAGE_NAME" .
      else
        docker build -f stackgres-k8s/src/operator/src/test/docker/Dockerfile.it -t "$TARGET_IT_IMAGE_NAME" .
      fi
      echo ...done
      echo Pushing...
      docker push "$TARGET_IT_IMAGE_NAME"
      echo ...done
  retry: 2

.build image multi archs:
  image: docker:20.10.6
  stage: image build multi archs
  timeout: 1 hour
  script:
    - 'export IMAGE_TAG="${CI_COMMIT_TAG:-"$CI_COMMIT_SHORT_SHA"}$IMAGE_SUFFIX"'
    - 'export IMAGE_NAME="$IMAGE_BASE_NAME:$IMAGE_TAG"'
    - 'export TARGET_IMAGE_NAME="$CI_REGISTRY/$CI_PROJECT_PATH/$IMAGE_NAME"'
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
    - cd stackgres-k8s/src
    - |
      ARCH_LIST="amd64 $(
        if [ "$DO_ARM" = true ] \
          || { [ "$SKIP_ARM" != true ] && [ -n "$CI_COMMIT_TAG" ]; }
        then
          echo arm64
        fi
        )"
      if docker manifest inspect "$TARGET_IMAGE_NAME" >/dev/null 2>&1
      then
        docker pull registry.gitlab.com/ongresinc/stackgres/placeholder
        docker tag registry.gitlab.com/ongresinc/stackgres/placeholder "$TARGET_IMAGE_NAME"
        docker push "$TARGET_IMAGE_NAME"
      fi
      docker manifest rm "$TARGET_IMAGE_NAME" 2>/dev/null || true
      docker manifest create "$TARGET_IMAGE_NAME" $(
        for ARCH in $ARCH_LIST
        do
          echo "$TARGET_IMAGE_NAME-$ARCH "
        done)
      docker manifest push "$TARGET_IMAGE_NAME"
  retry: 2

.build test image multi archs:
  image: docker:20.10.6
  stage: image build multi archs
  timeout: 1 hour
  script:
    - |
      IT_IMAGE_NAME="$(grep -o '<it\.image>\([^<]\+\)</it\.image>' stackgres-k8s/src/pom.xml \
        | tr '<>' '  ' | cut -d ' ' -f 3)"
    - TARGET_IT_IMAGE_NAME="$CI_REGISTRY/$CI_PROJECT_PATH/$IT_IMAGE_NAME"
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
    - |
      ARCH_LIST="amd64 $(
        if [ "$DO_ARM" = true ] \
          || { [ "$SKIP_ARM" != true ] && [ -n "$CI_COMMIT_TAG" ]; }
        then
          echo arm64
        fi
        )"
      if ! docker manifest inspect "$TARGET_IT_IMAGE_NAME" >/dev/null 2>&1
      then
        docker manifest rm "$TARGET_IT_IMAGE_NAME" 2>/dev/null || true
        docker manifest create "$TARGET_IT_IMAGE_NAME" $(
          for ARCH in $ARCH_LIST
          do
            echo "$TARGET_IT_IMAGE_NAME-$ARCH "
          done)
        docker manifest push "$TARGET_IT_IMAGE_NAME"
      fi
  retry: 2

.build jvm image amd64:
  extends: .build image
  tags:
    - stackgres-runner-v2
    - linux-amd64
  variables:
    IMAGE_SUFFIX: '-jvm-amd64'

.build native image amd64:
  extends: .build image
  dependencies:
    - native build
  tags:
    - stackgres-runner-v2
    - linux-amd64
  variables:
    IMAGE_SUFFIX: '-amd64'
  only:
    variables:
      - $SKIP_NATIVE != "true"  && $CI_COMMIT_TAG && $CI_COMMIT_TAG !~ /^latest-.*$/
      - $DO_DEPLOY
      - $DO_NATIVE

build operator jvm image amd64:
  extends: .build jvm image amd64
  variables:
    IMAGE_BASE_NAME: stackgres/operator
    IMAGE_NAME_ENV_VAR: OPERATOR_IMAGE_NAME
    LOCK_FILE: stackgres-operator-build-jvm-image
    BUILD_FILE: operator/src/main/docker/build-image-jvm.sh

build restapi jvm image amd64:
  extends: .build jvm image amd64
  variables:
    IMAGE_BASE_NAME: stackgres/restapi
    IMAGE_NAME_ENV_VAR: RESTAPI_IMAGE_NAME
    LOCK_FILE: stackgres-restapi-build-jvm-image
    BUILD_FILE: api-web/src/main/docker/build-image-jvm.sh

build jobs jvm image amd64:
  extends: .build jvm image amd64
  variables:
    IMAGE_BASE_NAME: stackgres/jobs
    IMAGE_NAME_ENV_VAR: JOBS_IMAGE_NAME
    LOCK_FILE: stackgres-jobs-build-jvm-image
    BUILD_FILE: jobs/src/main/docker/build-image-jvm.sh

build cluster-controller jvm image amd64:
  extends: .build jvm image amd64
  variables:
    IMAGE_BASE_NAME: stackgres/cluster-controller
    IMAGE_NAME_ENV_VAR: CLUSTER_CONTROLLER_IMAGE_NAME
    LOCK_FILE: stackgres-cluster-controller-build-jvm-image
    BUILD_FILE: cluster-controller/src/main/docker/build-image-jvm.sh

build distributedlogs-controller jvm image amd64:
  extends: .build jvm image amd64
  variables:
    IMAGE_BASE_NAME: stackgres/distributedlogs-controller
    IMAGE_NAME_ENV_VAR: DISTRIBUTEDLOGS_CONTROLLER_IMAGE_NAME
    LOCK_FILE: stackgres-distributedlogs-controller-build-jvm-image
    BUILD_FILE: distributedlogs-controller/src/main/docker/build-image-jvm.sh

build operator native image amd64:
  extends: .build native image amd64
  dependencies:
    - build operator native executable amd64
  variables:
    IMAGE_BASE_NAME: stackgres/operator
    IMAGE_NAME_ENV_VAR: OPERATOR_IMAGE_NAME
    LOCK_FILE: stackgres-operator-build-native-image
    BUILD_FILE: operator/src/main/docker/build-image-native.sh

build restapi native image amd64:
  extends: .build native image amd64
  dependencies:
    - build restapi native executable amd64
  variables:
    IMAGE_BASE_NAME: stackgres/restapi
    IMAGE_NAME_ENV_VAR: RESTAPI_IMAGE_NAME
    LOCK_FILE: stackgres-restapi-build-native-image
    BUILD_FILE: api-web/src/main/docker/build-image-native.sh

build jobs native image amd64:
  extends: .build native image amd64
  dependencies:
    - build jobs native executable amd64
  variables:
    IMAGE_BASE_NAME: stackgres/jobs
    IMAGE_NAME_ENV_VAR: JOBS_IMAGE_NAME
    LOCK_FILE: stackgres-jobs-build-native-image
    BUILD_FILE: jobs/src/main/docker/build-image-native.sh

build cluster-controller native image amd64:
  extends: .build native image amd64
  dependencies:
    - build cluster-controller native executable amd64
  variables:
    IMAGE_BASE_NAME: stackgres/cluster-controller
    IMAGE_NAME_ENV_VAR: CLUSTER_CONTROLLER_IMAGE_NAME
    LOCK_FILE: stackgres-cluster-controller-build-native-image
    BUILD_FILE: cluster-controller/src/main/docker/build-image-native.sh

build distributedlogs-controller native image amd64:
  extends: .build native image amd64
  dependencies:
    - build distributedlogs-controller native executable amd64
  variables:
    IMAGE_BASE_NAME: stackgres/distributedlogs-controller
    IMAGE_NAME_ENV_VAR: DISTRIBUTEDLOGS_CONTROLLER_IMAGE_NAME
    LOCK_FILE: stackgres-distributedlogs-controller-build-native-image
    BUILD_FILE: distributedlogs-controller/src/main/docker/build-image-native.sh

build admin-ui image amd64:
  extends: .build image
  dependencies:
    - build ui
  tags:
    - stackgres-runner-v2
    - linux-amd64
  variables:
    IMAGE_SUFFIX: '-amd64'
    IMAGE_BASE_NAME: stackgres/admin-ui
    IMAGE_NAME_ENV_VAR: ADMINUI_IMAGE_NAME
    LOCK_FILE: stackgres-adminui-build-image
    BUILD_FILE: admin-ui/docker/build.sh

build test image amd64:
  extends: .build test image
  tags:
    - stackgres-runner-v2
    - linux-amd64
  variables:
    IMAGE_SUFFIX: '-amd64'

.build jvm image arm64:
  extends: .build image
  tags:
    - stackgres-runner-v2
    - linux-arm64
  variables:
    IMAGE_SUFFIX: '-jvm-arm64'
  only:
    variables:
      - $SKIP_ARM != "true" && $CI_COMMIT_TAG && $CI_COMMIT_TAG !~ /^latest-.*$/
      - $DO_ARM

.build native image arm64:
  extends: .build image
  dependencies:
    - native build
  tags:
    - stackgres-runner-v2
    - linux-arm64
  variables:
    IMAGE_SUFFIX: '-arm64'
  only:
    variables:
      - $SKIP_NATIVE != "true" && $SKIP_ARM != "true" && $CI_COMMIT_TAG && $CI_COMMIT_TAG !~ /^latest-.*$/
      - $DO_DEPLOY
      - $DO_NATIVE && $DO_ARM

build operator jvm image arm64:
  extends: .build jvm image arm64
  variables:
    IMAGE_BASE_NAME: stackgres/operator
    IMAGE_NAME_ENV_VAR: OPERATOR_IMAGE_NAME
    LOCK_FILE: stackgres-operator-build-jvm-image
    BUILD_FILE: operator/src/main/docker/build-image-jvm.sh

build restapi jvm image arm64:
  extends: .build jvm image arm64
  variables:
    IMAGE_BASE_NAME: stackgres/restapi
    IMAGE_NAME_ENV_VAR: RESTAPI_IMAGE_NAME
    LOCK_FILE: stackgres-restapi-build-jvm-image
    BUILD_FILE: api-web/src/main/docker/build-image-jvm.sh

build jobs jvm image arm64:
  extends: .build jvm image arm64
  variables:
    IMAGE_BASE_NAME: stackgres/jobs
    IMAGE_NAME_ENV_VAR: JOBS_IMAGE_NAME
    LOCK_FILE: stackgres-jobs-build-jvm-image
    BUILD_FILE: jobs/src/main/docker/build-image-jvm.sh

build cluster-controller jvm image arm64:
  extends: .build jvm image arm64
  variables:
    IMAGE_BASE_NAME: stackgres/cluster-controller
    IMAGE_NAME_ENV_VAR: CLUSTER_CONTROLLER_IMAGE_NAME
    LOCK_FILE: stackgres-cluster-controller-build-jvm-image
    BUILD_FILE: cluster-controller/src/main/docker/build-image-jvm.sh

build distributedlogs-controller jvm image arm64:
  extends: .build jvm image arm64
  variables:
    IMAGE_BASE_NAME: stackgres/distributedlogs-controller
    IMAGE_NAME_ENV_VAR: DISTRIBUTEDLOGS_CONTROLLER_IMAGE_NAME
    LOCK_FILE: stackgres-distributedlogs-controller-build-jvm-image
    BUILD_FILE: distributedlogs-controller/src/main/docker/build-image-jvm.sh

build operator native image arm64:
  extends: .build native image arm64
  dependencies:
    - build operator native executable arm64
  variables:
    IMAGE_BASE_NAME: stackgres/operator
    IMAGE_NAME_ENV_VAR: OPERATOR_IMAGE_NAME
    LOCK_FILE: stackgres-operator-build-native-image
    BUILD_FILE: operator/src/main/docker/build-image-native.sh

build restapi native image arm64:
  extends: .build native image arm64
  dependencies:
    - build restapi native executable arm64
  variables:
    IMAGE_BASE_NAME: stackgres/restapi
    IMAGE_NAME_ENV_VAR: RESTAPI_IMAGE_NAME
    LOCK_FILE: stackgres-restapi-build-native-image
    BUILD_FILE: api-web/src/main/docker/build-image-native.sh

build jobs native image arm64:
  extends: .build native image arm64
  dependencies:
    - build jobs native executable arm64
  variables:
    IMAGE_BASE_NAME: stackgres/jobs
    IMAGE_NAME_ENV_VAR: JOBS_IMAGE_NAME
    LOCK_FILE: stackgres-jobs-build-native-image
    BUILD_FILE: jobs/src/main/docker/build-image-native.sh

build cluster-controller native image arm64:
  extends: .build native image arm64
  dependencies:
    - build cluster-controller native executable arm64
  variables:
    IMAGE_BASE_NAME: stackgres/cluster-controller
    IMAGE_NAME_ENV_VAR: CLUSTER_CONTROLLER_IMAGE_NAME
    LOCK_FILE: stackgres-cluster-controller-build-native-image
    BUILD_FILE: cluster-controller/src/main/docker/build-image-native.sh

build distributedlogs-controller native image arm64:
  extends: .build native image arm64
  dependencies:
    - build distributedlogs-controller native executable arm64
  variables:
    IMAGE_BASE_NAME: stackgres/distributedlogs-controller
    IMAGE_NAME_ENV_VAR: DISTRIBUTEDLOGS_CONTROLLER_IMAGE_NAME
    LOCK_FILE: stackgres-distributedlogs-controller-build-native-image
    BUILD_FILE: distributedlogs-controller/src/main/docker/build-image-native.sh

build admin-ui image arm64:
  extends: .build image
  dependencies:
    - build ui
  tags:
    - stackgres-runner-v2
    - linux-arm64
  variables:
    IMAGE_SUFFIX: '-arm64'
    IMAGE_BASE_NAME: stackgres/admin-ui
    IMAGE_NAME_ENV_VAR: ADMINUI_IMAGE_NAME
    LOCK_FILE: stackgres-adminui-build-image
    BUILD_FILE: admin-ui/docker/build.sh
  only:
    variables:
      - $SKIP_ARM != "true" && $CI_COMMIT_TAG && $CI_COMMIT_TAG !~ /^latest-.*$/
      - $DO_ARM

build test image arm64:
  extends: .build test image
  tags:
    - stackgres-runner-v2
    - linux-arm64
  variables:
    IMAGE_SUFFIX: '-arm64'
  only:
    variables:
      - $SKIP_ARM != "true" && $CI_COMMIT_TAG && $CI_COMMIT_TAG !~ /^latest-.*$/
      - $DO_ARM

.build jvm image multi archs:
  extends: .build image multi archs
  tags:
    - stackgres-runner-v2
  variables:
    IMAGE_SUFFIX: '-jvm'

.build native image multi archs:
  extends: .build image multi archs
  tags:
    - stackgres-runner-v2
  variables:
    IMAGE_SUFFIX: ''
  only:
    variables:
      - $SKIP_NATIVE != "true" && $CI_COMMIT_REF_NAME =~ /^main.*$/
      - $SKIP_NATIVE != "true" && $CI_COMMIT_REF_NAME == "current"
      - $SKIP_NATIVE != "true" && $CI_COMMIT_TAG && $CI_COMMIT_TAG !~ /^latest-.*$/
      - $DO_DEPLOY
      - $DO_NATIVE

build operator jvm image multi archs:
  extends: .build jvm image multi archs
  variables:
    IMAGE_BASE_NAME: stackgres/operator

build restapi jvm image multi archs:
  extends: .build jvm image multi archs
  variables:
    IMAGE_BASE_NAME: stackgres/restapi

build jobs jvm image multi archs:
  extends: .build jvm image multi archs
  variables:
    IMAGE_BASE_NAME: stackgres/jobs

build cluster-controller jvm image multi archs:
  extends: .build jvm image multi archs
  variables:
    IMAGE_BASE_NAME: stackgres/cluster-controller

build distributedlogs-controller jvm image multi archs:
  extends: .build jvm image multi archs
  variables:
    IMAGE_BASE_NAME: stackgres/distributedlogs-controller

build operator native image multi archs:
  extends: .build native image multi archs
  variables:
    IMAGE_BASE_NAME: stackgres/operator

build restapi native image multi archs:
  extends: .build native image multi archs
  variables:
    IMAGE_BASE_NAME: stackgres/restapi

build jobs native image multi archs:
  extends: .build native image multi archs
  variables:
    IMAGE_BASE_NAME: stackgres/jobs

build cluster-controller native image multi archs:
  extends: .build native image multi archs
  variables:
    IMAGE_BASE_NAME: stackgres/cluster-controller

build distributedlogs-controller native image multi archs:
  extends: .build native image multi archs
  variables:
    IMAGE_BASE_NAME: stackgres/distributedlogs-controller

build admin-ui image multi archs:
  extends: .build image multi archs
  tags:
    - stackgres-runner-v2
  variables:
    IMAGE_SUFFIX: ''
    IMAGE_BASE_NAME: stackgres/admin-ui

build test image multi archs:
  extends: .build test image multi archs
  tags:
    - stackgres-runner-v2
